<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.0828.1711                                -->
<workbook source-platform='mac' version='9.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='UberChord' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.1'>
      <aliases enabled='yes' />
      <column caption='Resolution' datatype='real' name='[Arc Points (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.01'>
        <calculation class='tableau' formula='0.01' />
      </column>
      <column caption='Gap' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0035000000000000001'>
        <calculation class='tableau' formula='0.0035000000000000001' />
      </column>
      <column caption='Weight' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
        <calculation class='tableau' formula='0.29999999999999999' />
      </column>
      <column caption='Max D' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='r2' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='1.01'>
        <calculation class='tableau' formula='1.01' />
      </column>
      <column caption='Parameter 5' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='display resolution' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='0.001'>
        <calculation class='tableau' formula='0.001' />
      </column>
      <column caption='X_offset1' datatype='real' name='[Weight (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.20000000000000001'>
        <calculation class='tableau' formula='0.20000000000000001' />
      </column>
      <column caption='X_offset2' datatype='real' name='[X_offset1 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.20000000000000001'>
        <calculation class='tableau' formula='0.20000000000000001' />
      </column>
      <column caption='r3' datatype='real' name='[r2 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.0600000000000001'>
        <calculation class='tableau' formula='1.0600000000000001' />
      </column>
      <column caption='rx_label' datatype='real' name='[r3 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.3'>
        <calculation class='tableau' formula='1.3' />
      </column>
      <column caption='ry_label' datatype='real' name='[r4 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.2'>
        <calculation class='tableau' formula='1.2' />
      </column>
    </datasource>
    <datasource caption='Chord_Data' inline='true' name='textscan.42181.375245138900 (copy 2)' version='9.1'>
      <connection class='textscan' directory='/Users/nsalvate/Desktop/ChordFiles/Uber Data' filename='ChordData1.txt' password='' server='' username=''>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ChordData1#txt].[Dummy]' />
              <expression op='[2_Copies#txt].[Dummy]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[ChordData1#txt].[Name1]' />
                  <expression op='[ChordData2#txt].[Name2]' />
                </expression>
                <expression op='='>
                  <expression op='[ChordData1#txt].[Name2]' />
                  <expression op='[ChordData2#txt].[Name1]' />
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[ChordData1#txt].[Dummy]' />
                  <expression op='[5_Copies#txt].[Dummy]' />
                </expression>
              </clause>
              <relation name='ChordData1#txt' table='[ChordData1#txt]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
                  <column datatype='integer' name='Order1' ordinal='0' />
                  <column datatype='string' name='Name1' ordinal='1' />
                  <column datatype='real' name='Latitude' ordinal='2' />
                  <column datatype='real' name='Longitude' ordinal='3' />
                  <column datatype='real' name='Population' ordinal='4' />
                  <column datatype='string' name='Color1' ordinal='5' />
                  <column datatype='string' name='Name2' ordinal='6' />
                  <column datatype='real' name='Latitude2' ordinal='7' />
                  <column datatype='real' name='Longitude2' ordinal='8' />
                  <column datatype='real' name='Population2' ordinal='9' />
                  <column datatype='string' name='Color2' ordinal='10' />
                  <column datatype='real' name='1-&gt;2%' ordinal='11' />
                  <column datatype='integer' name='Dummy' ordinal='12' />
                </columns>
              </relation>
              <relation name='5_Copies#txt' table='[5_Copies#txt]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
                  <column datatype='integer' name='Copy' ordinal='0' />
                  <column datatype='integer' name='Dummy' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation name='ChordData2#txt' table='[ChordData2#txt]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
                <column datatype='integer' name='Order1' ordinal='0' />
                <column datatype='string' name='Name1' ordinal='1' />
                <column datatype='real' name='Latitude' ordinal='2' />
                <column datatype='real' name='Longitude' ordinal='3' />
                <column datatype='real' name='Population' ordinal='4' />
                <column datatype='string' name='Color1' ordinal='5' />
                <column datatype='string' name='Name2' ordinal='6' />
                <column datatype='real' name='Latitude2' ordinal='7' />
                <column datatype='real' name='Longitude2' ordinal='8' />
                <column datatype='real' name='Population2' ordinal='9' />
                <column datatype='string' name='Color2' ordinal='10' />
                <column datatype='real' name='1-&gt;2%' ordinal='11' />
                <column datatype='integer' name='Dummy' ordinal='12' />
              </columns>
            </relation>
          </relation>
          <relation name='2_Copies#txt' table='[2_Copies#txt]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
              <column datatype='integer' name='Base' ordinal='0' />
              <column datatype='integer' name='Dummy' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[1-&gt;2% (ChordData2.txt)]' value='[ChordData2#txt].[1-&gt;2%]' />
          <map key='[1-&gt;2%]' value='[ChordData1#txt].[1-&gt;2%]' />
          <map key='[Base]' value='[2_Copies#txt].[Base]' />
          <map key='[Color1 (ChordData2.txt)]' value='[ChordData2#txt].[Color1]' />
          <map key='[Color1]' value='[ChordData1#txt].[Color1]' />
          <map key='[Color2 (ChordData2.txt)]' value='[ChordData2#txt].[Color2]' />
          <map key='[Color2]' value='[ChordData1#txt].[Color2]' />
          <map key='[Copy]' value='[5_Copies#txt].[Copy]' />
          <map key='[Dummy (2_Copies.txt)]' value='[2_Copies#txt].[Dummy]' />
          <map key='[Dummy (5_Copies.txt)]' value='[5_Copies#txt].[Dummy]' />
          <map key='[Dummy (ChordData2.txt)]' value='[ChordData2#txt].[Dummy]' />
          <map key='[Dummy]' value='[ChordData1#txt].[Dummy]' />
          <map key='[Latitude (ChordData2.txt)]' value='[ChordData2#txt].[Latitude]' />
          <map key='[Latitude2 (ChordData2.txt)]' value='[ChordData2#txt].[Latitude2]' />
          <map key='[Latitude2]' value='[ChordData1#txt].[Latitude2]' />
          <map key='[Latitude]' value='[ChordData1#txt].[Latitude]' />
          <map key='[Longitude (ChordData2.txt)]' value='[ChordData2#txt].[Longitude]' />
          <map key='[Longitude2 (ChordData2.txt)]' value='[ChordData2#txt].[Longitude2]' />
          <map key='[Longitude2]' value='[ChordData1#txt].[Longitude2]' />
          <map key='[Longitude]' value='[ChordData1#txt].[Longitude]' />
          <map key='[Name1 (ChordData2.txt)]' value='[ChordData2#txt].[Name1]' />
          <map key='[Name1]' value='[ChordData1#txt].[Name1]' />
          <map key='[Name2 (ChordData2.txt)]' value='[ChordData2#txt].[Name2]' />
          <map key='[Name2]' value='[ChordData1#txt].[Name2]' />
          <map key='[Order1 (ChordData2.txt)]' value='[ChordData2#txt].[Order1]' />
          <map key='[Order1]' value='[ChordData1#txt].[Order1]' />
          <map key='[Population (ChordData2.txt)]' value='[ChordData2#txt].[Population]' />
          <map key='[Population2 (ChordData2.txt)]' value='[ChordData2#txt].[Population2]' />
          <map key='[Population2]' value='[ChordData1#txt].[Population2]' />
          <map key='[Population]' value='[ChordData1#txt].[Population]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Order1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order1]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Order1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name1]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Name1</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Color1]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Color1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name2]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Name2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude2]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Latitude2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude2]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Longitude2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population2]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Population2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Color2]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Color2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1-&gt;2%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1-&gt;2%]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>1-&gt;2%</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dummy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dummy]</local-name>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias>Dummy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ChordData1#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Copy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Copy]</local-name>
            <parent-name>[5_Copies#txt]</parent-name>
            <remote-alias>Copy</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dummy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dummy (5_Copies.txt)]</local-name>
            <parent-name>[5_Copies#txt]</parent-name>
            <remote-alias>Dummy</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[5_Copies#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order1 (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Order1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name1 (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Name1</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Color1 (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Color1</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name2 (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Name2</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude2 (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Latitude2</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude2 (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Longitude2</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population2 (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Population2</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Color2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Color2 (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Color2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1-&gt;2%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[1-&gt;2% (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>1-&gt;2%</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dummy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dummy (ChordData2.txt)]</local-name>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias>Dummy</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ChordData2#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base]</local-name>
            <parent-name>[2_Copies#txt]</parent-name>
            <remote-alias>Base</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dummy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dummy (2_Copies.txt)]</local-name>
            <parent-name>[2_Copies#txt]</parent-name>
            <remote-alias>Dummy</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2_Copies#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% (copy)' datatype='real' default-format='p0.00%' name='[% (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(iif([Name1]=[Name2],.5,1)* &#10;if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
      </column>
      <column caption='%2' datatype='real' default-format='p0.00%' name='[% (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//iif([Name1]=[Name2],.5,1)* &#10;(if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
      </column>
      <column caption='%_right' datatype='real' name='[%_left (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='lookup(max([Calculation_7740703151324948])/([running % (copy)]*(1+[Calculation_6990713134818659]*[Parameters].[Parameter 1])),last())'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' hidden='true' name='[A -&gt; B % (copy)]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Base]' role='dimension' type='ordinal' />
      <column datatype='real' hidden='true' name='[Bigger (copy 2)]' role='measure' type='quantitative' />
      <column caption='_Smaller' datatype='string' hidden='true' name='[Bigger (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//if [1 -&gt; 2 %]=0 and [2 -&gt; 1 %]=0 then &apos;Filter&apos;&#10;//else&#10;if [1-&gt;2%]&gt;=[1-&gt;2% (ChordData2.txt)] then [Name2]&#10;elseif [1-&gt;2%]&lt;[1-&gt;2% (ChordData2.txt)] then [Name1]&#10;end' />
      </column>
      <column datatype='real' hidden='true' name='[Bigger-&gt;Smaller (copy)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Calculation3 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_9200626121517530]=4 then if lookup(max([Name2]),-2)=lookup(max([Calculation_7600712223119598]),-2) then &#10;lookup([v2_X (copy)],-2) //else lookup([Running%_Left],-2) &#10;end&#10;end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Calculation7 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If min([Copy])=3 and max([Name1])=max([Calculation_7600712223119598]) then window_min([v2_X (copy)]) end'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Max Running % @0' datatype='real' name='[Calculation9 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='window_max([Calculation_5630719231757794])'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Calculation5' datatype='real' name='[Calculation_0010719125239659]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//if first()=0//-1/[Resolution] &#10;//then [Calculation4] end&#10;&#10;[Calculation_3890714104402623]'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='t' datatype='real' default-format='n#,##0.0000' name='[Calculation_0670703221952408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='previous_value(-[Parameters].[Arc Points (copy)])+[Parameters].[Arc Points (copy)]'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Calculation10' datatype='real' name='[Calculation_0850726131011108]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_9200626121517530]=2 then window_min(min({fixed [Name1]:Sum([1-&gt;2%])}))/10 end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Calculation7' datatype='real' name='[Calculation_0930719215835651]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If min([Copy])=2 and max([Name2])=max([Calculation_7600712223119598]) then window_min([v2_X (copy)]) end'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
          </table-calc>
        </calculation>
      </column>
      <column datatype='boolean' hidden='true' name='[Calculation_0970627120355834]' role='dimension' type='nominal' />
      <column caption='CircleColor' datatype='string' name='[Calculation_0990706121059053]' role='measure' type='nominal'>
        <calculation class='tableau' formula='lookup(max([Color2]),last())'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Circle Size' datatype='real' name='[Calculation_1030706114610438]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if max([Base])=2 then window_sum(if max([Base])=2 then max([zero path dim (copy)])/2 end) end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Endpoint Size (copy)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Calculation2' datatype='real' name='[Calculation_1100719133028959]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='window_sum([Calculation_3270714084951813])'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='ID' datatype='string' name='[Calculation_1770703152630338 (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Name1]+&quot;&lt;-&gt;&quot;+[Name2]' />
      </column>
      <column caption='running %' datatype='real' name='[Calculation_2060703155002665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='running_sum(max([Calculation_7740703151324948]))/([running % (copy)]*(1/(1-[Calculation_6990713134818659]*[Parameters].[Parameter 1])))+[Parameters].[Parameter 1]*max([Nbhd Order (A) (copy 2)])'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
            <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='%_left' datatype='real' name='[Calculation_2800703224035120]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='lookup(max([Calculation_7740703151324948])/([running % (copy)]*(1+[Calculation_6990713134818659]*[Parameters].[Parameter 1])),first())'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Pi' datatype='real' name='[Calculation_2850703225256847]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Lookup(Pi(),first())'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_3270714084951813]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='window_max(max({fixed [Name2] :sum(if Base=1 then [1-&gt;2%] end)}))'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' hidden='true' name='[Calculation_3500703102336025]' role='measure' type='quantitative' />
      <column caption='ID_Filter' datatype='integer' name='[Calculation_3550823211409183]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='iif(max([Name1])=max([Calculation_8870703143045119]),1,0)' />
      </column>
      <column caption='Name' datatype='string' hidden='true' name='[Calculation_3870703151150115]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Base]=1 then [Name1]&#10;else [Name2] end' />
      </column>
      <column caption='Calculation4' datatype='real' name='[Calculation_3890714104402623]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(window_min([Calculation_6680714103909740],first(),first())+window_min([Calculation_6680714103909740],last(),last()))/2'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Min Running % @0' datatype='real' name='[Calculation_3890719232932682]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='window_min([Calculation_5630719231757794])'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Midpoint Theta' datatype='real' name='[Calculation_4170719233243480]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//(&#10;min(lookup([Calculation_3890719232932682],first()),lookup([Calculation_3890719232932682],last()))&#10;//+&#10;//min(lookup([Max Running % @0],first()),lookup([Max Running % @0],last()))&#10;//)'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Tooltip Chord' datatype='string' name='[Calculation_4180726124718308]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_9200626121517530]=1 or [Calculation_9200626121517530]=5 then&#10;window_min(min(&#10;if [Name1]=[Name2] then&#10;[Name1]+&quot; ↔ &quot;+[Name2]+&quot; &quot;+left(str(round([1-&gt;2%]*100,2)),find(str(round([1-&gt;2%]*100,2)),&quot;.&quot;)+2)+&quot;%&quot;&#10;else&#10;[Name2]+&quot; → &quot;+[Name1]+&quot; &quot;+left(str(round([1-&gt;2%]*100,2)),find(str(round([1-&gt;2%]*100,2)),&quot;.&quot;)+2)+&quot;%&#10;&quot;+[Name1]+&quot; → &quot;+[Name2]+&quot; &quot;+left(str(round([1-&gt;2% (ChordData2.txt)]*100,2)),find(str(round([1-&gt;2% (ChordData2.txt)]*100,2)),&quot;.&quot;)+2)+&quot;%&quot;&#10;end&#10;))&#10;end&#10;&#10;//window_min(min(Left([ID],find([ID],&quot;&lt;&quot;)-1)+&quot; -&gt; &quot;+Mid([ID],find([ID],&quot;&gt;&quot;)+1)+&quot; &quot;+left(str([1-&gt;2%]),find(str([1-&gt;2%]),&quot;.&quot;)+2)+&quot;%&#10;//&quot;+Mid([ID],find([ID],&quot;&gt;&quot;)+1)+&quot; -&gt; &quot;+Left([ID],find([ID],&quot;&lt;&quot;)-1)+&quot; &quot;+str(round([A   B % (ChordData2.txt)],2))))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='zero path' datatype='boolean' name='[Calculation_4210705094609589]' role='measure' type='nominal'>
        <calculation class='tableau' formula='window_max(max([1-&gt;2%]))=0 and window_max(max([1-&gt;2% (ChordData2.txt)]))=0'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' hidden='true' name='[Calculation_4260626104935528]' role='dimension' type='nominal' />
      <column caption='Calculation15' datatype='integer' name='[Calculation_4280726230151689]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='zn(iif([Base]=1,1,0))' />
      </column>
      <column datatype='integer' hidden='true' name='[Calculation_4560626102201611]' role='measure' type='quantitative' />
      <column caption='Calculation8' datatype='real' name='[Calculation_4900723215921035]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(Lookup([Calculation_3890719232932682],-2)+Lookup([Calculation9 (copy)],-2))/2'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='integer' hidden='true' name='[Calculation_5100626092944858]' role='measure' type='quantitative' />
      <column caption='Running % @0' datatype='real' name='[Calculation_5630719231757794]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_0670703221952408]=0 then [Calculation_2060703155002665] end'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Color Max' datatype='string' name='[Calculation_5840706103928033]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if lookup(max([1-&gt;2%]),last())&gt;=lookup(max([1-&gt;2%]),first()) then &#10;max([Color1]) else max([Color2]) end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Base]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='boolean' hidden='true' name='[Calculation_5890703142603864]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Calculation_6080703145848480]' role='dimension' type='nominal' />
      <column caption='index' datatype='integer' hidden='true' name='[Calculation_6280705154920526]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='index()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='X_Path' datatype='real' name='[Calculation_6640703222416979]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//If [t]&lt;=.25 then if sin(2*[Pi]*[Running%_Left])&lt;&gt;sin(2*[Pi]*([Running%_Right]-[%_right])) then sin(2*[Pi]*[Running%_Left])*(1-4*[t])^2+sin(2*[Pi]*([Running%_Right]-[%_right]))*(4*[t])^2 else sin(2*[Pi]*([Running%_Right]-[%_right])) end&#10;//elseif [t]&lt;=.5 then sin(2*[Pi]*([Running%_Right]-[%_right]*2*(1-2*[t])))&#10;//elseif [t]&lt;=.75 then if sin(2*[Pi]*[Running%_Right])&lt;&gt;sin(2*[Pi]*([Running%_Left]-[%_left])) then sin(2*[Pi]*[Running%_Right])*(1-(4*[t]-2))^2+sin(2*[Pi]*([Running%_Left]-[%_left]))*(4*[t]-2)^2 else sin(2*[Pi]*([Running%_Left]-[%_left])) end&#10;//elseif [t]&lt;1  then sin(2*[Pi]*([Running%_Left]-[%_left]*(1-(4*[t]-3))))&#10;//end&#10;Int((if [Calculation_9200626121517530]=1 then&#10;If [Calculation_0670703221952408]&lt;=.25 then //if sin(2*[Pi]*[Running%_Left])&lt;&gt;sin(2*[Pi]*([Running%_Right]-[%_right])) then &#10;if [Name_A=Name_B (copy)]=1 then sin(2*[Calculation_2850703225256847]*[v2_X (copy)]) else&#10;sin(2*[Calculation_2850703225256847]*[v2_X (copy)])*(1-4*[Calculation_0670703221952408])^2+sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*(4*[Calculation_0670703221952408])^2&#10;+2*(4*[Calculation_0670703221952408])*(1-4*[Calculation_0670703221952408])*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[v2_X (copy)])-sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2+(cos(2*[Calculation_2850703225256847]*[v2_X (copy)])-cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2)))  *  (sin(2*[Calculation_2850703225256847]*[v2_X (copy)])+sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))/2 &#10;//else sin(2*[Pi]*([Running%_Right]-[%_right])) end&#10;end&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*2*(1-2*[Calculation_0670703221952408])))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then //if sin(2*[Pi]*[Running%_Right])&lt;&gt;sin(2*[Pi]*([Running%_Left]-[%_left])) then &#10;sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])*(1-(4*[Calculation_0670703221952408]-2))^2+sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*(4*[Calculation_0670703221952408]-2)^2&#10;+2*(4*[Calculation_0670703221952408]-2)*(1-(4*[Calculation_0670703221952408]-2))*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2+(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2)))  *  (sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])+sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))/2 &#10;//else sin(2*[Pi]*([Running%_Left]-[%_left])) end&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-3))))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=2 then&#10;If [Calculation_0670703221952408]&lt;=.25 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=3 then&#10;If [Calculation_0670703221952408]&lt;=.25 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=5 then&#10;If [Calculation_0670703221952408]&lt;=.25 then //if sin(2*[Pi]*[Running%_Left])&lt;&gt;sin(2*[Pi]*([Running%_Right]-[%_right])) then &#10;if [Name_A=Name_B (copy)]=1 then sin(2*[Calculation_2850703225256847]*[v2_X (copy)]) else&#10;sin(2*[Calculation_2850703225256847]*[v2_X (copy)])*(1-4*[Calculation_0670703221952408])^2+sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*(4*[Calculation_0670703221952408])^2&#10;+2*(4*[Calculation_0670703221952408])*(1-4*[Calculation_0670703221952408])*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[v2_X (copy)])-sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2+(cos(2*[Calculation_2850703225256847]*[v2_X (copy)])-cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2)))  *  (sin(2*[Calculation_2850703225256847]*[v2_X (copy)])+sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))/2 &#10;//else sin(2*[Pi]*([Running%_Right]-[%_right])) end&#10;end&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*2*(1-2*[Calculation_0670703221952408])))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then //if sin(2*[Pi]*[Running%_Right])&lt;&gt;sin(2*[Pi]*([Running%_Left]-[%_left])) then &#10;sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])*(1-(4*[Calculation_0670703221952408]-2))^2+sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*(4*[Calculation_0670703221952408]-2)^2&#10;+2*(4*[Calculation_0670703221952408]-2)*(1-(4*[Calculation_0670703221952408]-2))*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2+(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2)))  *  (sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])+sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))/2 &#10;//else sin(2*[Pi]*([Running%_Left]-[%_left])) end&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-3))))&#10;end&#10;&#10;&#10;&#10;&#10;&#10;end)/[Parameters].[Parameter 8])*[Parameters].[Parameter 8]&#10;&#10;//if [Copy Filled]=1 then&#10;//If [t]&lt;=.25 then  if [Name1=Name2]=1 then cos(2*[Pi]*[Running%_Left]) else&#10;//  cos(2*[Pi]*[Running%_Left])*(1-4*[t])^2+cos(2*[Pi]*([Running%_Right]-[%_right]))*(4*[t])^2&#10;//  +2*(4*[t])*(1-4*[t])*([Weight]*([Max D]-sqrt((sin(2*[Pi]*[Running%_Left])-sin(2*[Pi]*([Running%_Right]-[%_right])))^2+(cos(2*[Pi]*[Running%_Left])-cos(2*[Pi]*([Running%_Right]-[%_right])))^2))) * (cos(2*[Pi]*[Running%_Left])+cos(2*[Pi]*([Running%_Right]-[%_right])))/2&#10;//  end&#10;//elseif [t]&lt;=.5 then cos(2*[Pi]*([Running%_Right]-[%_right]*2*(1-2*[t])))&#10;//elseif [t]&lt;=.75 then&#10;//  cos(2*[Pi]*[Running%_Right])*(1-(4*[t]-2))^2+cos(2*[Pi]*([Running%_Left]-[%_left]))*(4*[t]-2)^2&#10;//  +2*((4*[t]-2))*(1-(4*[t]-2))*([Weight]*([Max D]-sqrt((sin(2*[Pi]*[Running%_Right])-sin(2*[Pi]*([Running%_Left]-[%_left])))^2+(cos(2*[Pi]*[Running%_Right])-cos(2*[Pi]*([Running%_Left]-[%_left])))^2)))*(cos(2*[Pi]*[Running%_Right])+cos(2*[Pi]*([Running%_Left]-[%_left])))/2 &#10;//elseif [t]&lt;=1 cos(2*[Pi]*([Running%_Left]-[%_left]*(1-(4*[t]-3))))&#10;//end&#10;//end'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Calculation3' datatype='real' name='[Calculation_6680714103909740]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_9200626121517530]=4 then if lookup(max([Name2]),-1)=lookup(max([Calculation_7600712223119598]),-1) then &#10;lookup([Running%_Left (copy)],-1) //else lookup([Running%_Right],-2) &#10;end&#10;end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Calculation11' datatype='real' name='[Calculation_6730726132528022]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_9200626121517530]=2 or [Calculation_9200626121517530]=3 then window_min([Calculation_0850726131011108]) end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Gap Count' datatype='integer' name='[Calculation_6990713134818659]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='window_max(max([Order1]))'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
          </table-calc>
        </calculation>
      </column>
      <column datatype='integer' hidden='true' name='[Calculation_7330703145602604]' role='measure' type='quantitative' />
      <column caption='Name3' datatype='string' name='[Calculation_7600712223119598]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='Case [Copy]&#10;When 1 then [Name1]&#10;When 2 then [Name1]&#10;When 3 then [Name2]&#10;When 4 then [Name2]&#10;When 5 then if [Name1]&lt;&gt;[Name2] then [Name2] end&#10;End' />
      </column>
      <column caption='%' datatype='real' default-format='p0.00%' name='[Calculation_7740703151324948]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(iif([Name1]=[Name2],.5,1)* &#10;if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
      </column>
      <column caption='Calculation13' datatype='real' default-format='p0.00%' name='[Calculation_7830726150917479]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_9200626121517530]=2 then window_max(max([Calculation_7740703151324948])) &#10;elseif [Calculation_9200626121517530]=3 then window_min(min([Calculation_7740703151324948])) end'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' hidden='true' name='[Calculation_8300703082725380]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Calculation_8810703084959054]' role='measure' type='quantitative' />
      <column caption='_Bigger' datatype='string' name='[Calculation_8870703143045119]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='//if [1 -&gt; 2 %]=0 and [2 -&gt; 1 %]=0 then &apos;Filter&apos;&#10;//else&#10;if [1-&gt;2%]&gt;[1-&gt;2% (ChordData2.txt)] then [Name1]&#10;else//if [1-&gt;2%]&lt;=[A   B % (ChordData2.txt)] then &#10;[Name2]&#10;end' />
      </column>
      <column caption='Tooltip Boundary' datatype='string' name='[Calculation_8900726133312920]' role='measure' type='nominal'>
        <calculation class='tableau' formula='window_min(min([Calculation_7600712223119598]))+&quot;: &quot;+left(str(round([Calculation_6730726132528022]*100,2)),find(str(round([Calculation_6730726132528022]*100,2)),&quot;.&quot;)+2)+&quot;%&quot;'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='PolyType' datatype='string' name='[Calculation_8920726140230339]' role='measure' type='nominal'>
        <calculation class='tableau' formula='Case [Calculation_9200626121517530]&#10;When 1 Then &quot;Interior&quot;&#10;When 2 Then &quot;Border&quot;&#10;When 3 then &quot;Border&quot;&#10;When 4 then &quot;Label&quot;&#10;When 5 then &quot;Interior&quot;&#10;End'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Copy Filled' datatype='integer' name='[Calculation_9200626121517530]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='window_max(max([Copy]))'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' name='[CircleColor (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if max([1-&gt;2%])&gt;0 then [Calculation_0990706121059053] else &apos;zero&apos; end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Color' datatype='string' name='[Color (copy 2)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_9200626121517530]=1 then if window_max(max([Name2]))&lt;&gt;window_max(max([Calculation_8870703143045119])) then window_max(max([Color1])) else window_max(max([Color2])) end&#10;elseif [Calculation_9200626121517530]=2 then window_max(max([Color1]))&#10;elseif [Calculation_9200626121517530]=3 then window_max(max([Color2]))&#10;elseif [Calculation_9200626121517530]=5 then if window_max(max([Name2]))&lt;&gt;window_max(max([Calculation_8870703143045119])) then window_max(max([Color1])) else window_max(max([Color2])) end&#10;else &apos;other&apos;&#10;end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='string' name='[Color1]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Copy]' role='dimension' type='ordinal' />
      <column caption='Dummy (2 Copies.txt)' datatype='integer' hidden='true' name='[Dummy (2_Copies.txt)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Dummy (5_Copies.txt)]' role='measure' type='quantitative' />
      <column caption='Dummy (5 Copys.txt)' datatype='integer' hidden='true' name='[Dummy (5_Copys.txt)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Dummy (ChordData2.txt)]' role='measure' type='quantitative' />
      <column caption='Dummy (Uber Raw2.txt)' datatype='integer' hidden='true' name='[Dummy (Uber_Raw2.txt)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Dummy]' role='measure' type='quantitative' />
      <column caption='Base (bin)' datatype='integer' name='[Duplicate (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Base]' peg='0' size-parameter='[Parameters].[Arc Points (copy)]' />
      </column>
      <column caption='Pt_Name' datatype='string' name='[Endpoint Size (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='iif([Base]=2,[Name2],[Name1])' />
      </column>
      <column datatype='string' hidden='true' name='[F10 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F10]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F11 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F11]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F12 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F12]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F13 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F13]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F14 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F14]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F15 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F15]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F16 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F16]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F17 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F17]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F18 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F18]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F19 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F19]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F20 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F20]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F21 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F21]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F22 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F22]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F8 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F8]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F9 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F9]' role='dimension' type='nominal' />
      <column datatype='string' name='[LabelCalc (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_9200626121517530]=4 and first()=0 then window_max(max([Calculation_7600712223119598]))&#10;end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column aggregation='Avg' datatype='real' hidden='true' name='[Lat2 (ChordData2.txt)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude (ChordData2.txt)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude2 (ChordData2.txt)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude2]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' hidden='true' name='[Lon2 (ChordData2.txt)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude (ChordData2.txt)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude2 (ChordData2.txt)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude2]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[Name1]' role='dimension' type='nominal' />
      <column caption='LabelCalc' datatype='string' name='[NameCalc (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='//if [Copy Filled]=4 and first()=0 and [X_Path (2)]&gt;=0 then left(&apos;__________________________________&apos;,len(window_max(max([Name3]))))+window_max(max([Name3]))+left(&apos;__________________________________&apos;,len(window_max(max([Name3]))))&#10;//elseif [Copy Filled]=4 and first()=0  then window_max(max([Name3]))&#10;//end&#10;&#10;if [Calculation_9200626121517530]=4 and first()=0 then window_max(max([Calculation_7600712223119598]))&#10;end'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' hidden='true' name='[Name_A (copy 2)]' role='measure' type='quantitative' />
      <column caption='Name1=Name2' datatype='integer' name='[Name_A=Name_B (copy)]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='window_max(max(iif([Name1]=[Name2],1,0)))'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Advanced Order' datatype='integer' name='[Nbhd Order (A) (copy 2)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [Base]=1 then [Order1]&#10;else [Order1 (ChordData2.txt)] end' />
      </column>
      <column datatype='integer' hidden='true' name='[Nbhd Order (copy 2)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Order1 (ChordData2.txt)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Order1]' role='dimension' type='ordinal' />
      <column caption='Running%_Right' datatype='real' name='[Running%_Left (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='lookup([Calculation_2060703155002665],last())&#10;//Case max([Copy])&#10;//When 1 then if max([Duplicate])=1 then sin(2*Pi()*[running %])&#10;//            else sin(2*Pi()*[running %]+max([%])/(1+35*[Gap])) end&#10;//When 2 then if max([Duplicate])=1 then sin(2*Pi()*lookup([running %],1)+lookup(max([%])/(1+35*[Gap]),1))&#10;//            else sin(2*Pi()*[running %]) END&#10;//When 3 then if max([Duplicate])=1 then sin(2*Pi()*lookup([running %],1))&#10;//            else sin(2*Pi()*lookup([running %],-1)+lookup(max([%])/(1+35*[Gap]),-1)) END&#10;//When 4 then if max([Duplicate])=1 then sin(2*Pi()*[running %]+max([%])/(1+35*[Gap]))&#10;//            else sin(2*Pi()*lookup([running %],-1)) End&#10;//End'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Master Order' datatype='real' name='[UberOrderB (copy)]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='//iif([Name1]=[Name2],[Nbhd Order]+(1-2*[%]),[Nbhd Order]+(1-[%]))&#10;&#10;[Nbhd Order (A) (copy 2)]+(1-2*[% (copy 2)])' />
      </column>
      <column datatype='real' hidden='true' name='[UberUberOrder (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='//iif([Name1]=[Name2],[Nbhd Order]+(1-2*[%]),[Nbhd Order]+(1-[%]))&#10;&#10;[Order1]+(1-2*[1-&gt;2%])' />
      </column>
      <column caption='X_Path (2)' datatype='real' name='[X_Path (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='//If [t]&lt;=.25 then if sin(2*[Pi]*[Running%_Left])&lt;&gt;sin(2*[Pi]*([Running%_Right]-[%_right])) then sin(2*[Pi]*[Running%_Left])*(1-4*[t])^2+sin(2*[Pi]*([Running%_Right]-[%_right]))*(4*[t])^2 else sin(2*[Pi]*([Running%_Right]-[%_right])) end&#10;//elseif [t]&lt;=.5 then sin(2*[Pi]*([Running%_Right]-[%_right]*2*(1-2*[t])))&#10;//elseif [t]&lt;=.75 then if sin(2*[Pi]*[Running%_Right])&lt;&gt;sin(2*[Pi]*([Running%_Left]-[%_left])) then sin(2*[Pi]*[Running%_Right])*(1-(4*[t]-2))^2+sin(2*[Pi]*([Running%_Left]-[%_left]))*(4*[t]-2)^2 else sin(2*[Pi]*([Running%_Left]-[%_left])) end&#10;//elseif [t]&lt;1  then sin(2*[Pi]*([Running%_Left]-[%_left]*(1-(4*[t]-3))))&#10;//end&#10;Int((if [Calculation_9200626121517530]=2 then&#10;&#10;If [Calculation_0670703221952408]&lt;=.25 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=3 then&#10;&#10;If [Calculation_0670703221952408]&lt;=.25 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=4 then&#10;  if [Calculation_0670703221952408]=0 then &#10;  [Parameters].[r3 (copy)]*sin(2*[Calculation_2850703225256847]*([Calculation_4900723215921035]))&#10;+(&#10;[Parameters].[Weight (copy)]//len([LabelCalc])&#10;-2*iif(sin(2*[Calculation_2850703225256847]*([Calculation_4900723215921035]))&lt;=0,&#10;[Parameters].[X_offset1 (copy)]//len([LabelCalc])&#10;,0))/[Parameters].[Parameter 5]&#10;  //elseif //[t]=2*[Resolution] &#10;  //window_max(max([Base]))=2 and window_min(min([Name3]))=[Label Brand] then 0&#10;  end&#10;&#10;end)/[Parameters].[Parameter 8])*[Parameters].[Parameter 8]&#10;&#10;//0-&gt;.25 4*[t]&#10;//.25-&gt;.5 4*[t]-1&#10;//.5-&gt;.75 4*[t]-2&#10;//.75-&gt;1  4*[t]-3'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Y_Path' datatype='real' name='[X_Path (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Int((if [Calculation_9200626121517530]=1 then&#10;  if not [Calculation_4210705094609589] then&#10;    if [Calculation_0670703221952408]&lt;=.25 then &#10;      if [Name_A=Name_B (copy)]=1 then cos(2*[Calculation_2850703225256847]*[v2_X (copy)]) else&#10;        cos(2*[Calculation_2850703225256847]*[v2_X (copy)])*(1-4*[Calculation_0670703221952408])^2+cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*(4*[Calculation_0670703221952408])^2&#10;        +2*(4*[Calculation_0670703221952408])*(1-4*[Calculation_0670703221952408])*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[v2_X (copy)])-sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2+(cos(2*[Calculation_2850703225256847]*[v2_X (copy)])-cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2))) * (cos(2*[Calculation_2850703225256847]*[v2_X (copy)])+cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))/2&#10;      end&#10;    elseif [Calculation_0670703221952408]&lt;=.5 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*2*(1-2*[Calculation_0670703221952408])))&#10;    elseif [Calculation_0670703221952408]&lt;=.75 then&#10;      cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])*(1-(4*[Calculation_0670703221952408]-2))^2+cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*(4*[Calculation_0670703221952408]-2)^2&#10;      +2*((4*[Calculation_0670703221952408]-2))*(1-(4*[Calculation_0670703221952408]-2))*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2+(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2)))*(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])+cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))/2 &#10;    else cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-3))))&#10;    end&#10;  end&#10;elseif [Calculation_9200626121517530]=2 then&#10;  if [Calculation_0670703221952408]&lt;=.25 then cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;  elseif [Calculation_0670703221952408]&lt;=.5 then cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;  elseif [Calculation_0670703221952408]&lt;=.75 then cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;  elseif [Calculation_0670703221952408]&lt;=1  then cos(2*[Calculation_2850703225256847]*([v2_X (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;  end&#10;elseif [Calculation_9200626121517530]=3 then&#10;  if [Calculation_0670703221952408]&lt;=.25 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;  elseif [Calculation_0670703221952408]&lt;=.5 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;  elseif [Calculation_0670703221952408]&lt;=.75 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;  elseif [Calculation_0670703221952408]&lt;=1  then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;  end&#10;elseif [Calculation_9200626121517530]=4 //and [Name1=Name2]=1 &#10;then&#10;  if [Calculation_0670703221952408]=0 then &#10;  [Parameters].[r4 (copy)]*cos(2*[Calculation_2850703225256847]*([Calculation_4900723215921035]))&#10;  //elseif //[t]=2*[Resolution] &#10;  //window_max(max([Base]))=2 then 0&#10;  end&#10;elseif [Calculation_9200626121517530]=5 then&#10;  if not [Calculation_4210705094609589] then&#10;    if [Calculation_0670703221952408]&lt;=.25 then &#10;      if [Name_A=Name_B (copy)]=1 then cos(2*[Calculation_2850703225256847]*[v2_X (copy)]) else&#10;        cos(2*[Calculation_2850703225256847]*[v2_X (copy)])*(1-4*[Calculation_0670703221952408])^2+cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*(4*[Calculation_0670703221952408])^2&#10;        +2*(4*[Calculation_0670703221952408])*(1-4*[Calculation_0670703221952408])*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[v2_X (copy)])-sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2+(cos(2*[Calculation_2850703225256847]*[v2_X (copy)])-cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2))) * (cos(2*[Calculation_2850703225256847]*[v2_X (copy)])+cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))/2&#10;      end&#10;    elseif [Calculation_0670703221952408]&lt;=.5 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*2*(1-2*[Calculation_0670703221952408])))&#10;    elseif [Calculation_0670703221952408]&lt;=.75 then&#10;      cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])*(1-(4*[Calculation_0670703221952408]-2))^2+cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*(4*[Calculation_0670703221952408]-2)^2&#10;      +2*((4*[Calculation_0670703221952408]-2))*(1-(4*[Calculation_0670703221952408]-2))*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2+(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2)))*(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])+cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))/2 &#10;    else cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-3))))&#10;    end&#10;  end&#10;&#10;&#10;end&#10;&#10;&#10;&#10;)/[Parameters].[Parameter 8])*[Parameters].[Parameter 8]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' hidden='true' name='[color (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[color2 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' hidden='true' name='[latitude (ChordData2.txt)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' hidden='true' name='[longitude (ChordData2.txt)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' hidden='true' name='[name1 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[name2 (ChordData2.txt)]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[pop2 (ChordData2.txt)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[population (ChordData2.txt)]' role='measure' type='quantitative' />
      <column datatype='real' name='[running % (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='window_sum(max([Calculation_7740703151324948]))//((1/(1-window_max([Gap Count])*[Gap]))+[Gap]*max([Advanced Order]))'>
          <table-calc ordering-type='Field'>
            <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
            <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
            <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Running%_Left' datatype='real' name='[v2_X (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='lookup([Calculation_2060703155002665],first())&#10;//Case max([Copy])&#10;//When 1 then if max([Duplicate])=1 then sin(2*Pi()*[running %])&#10;//            else sin(2*Pi()*[running %]+max([%])/(1+35*[Gap])) end&#10;//When 2 then if max([Duplicate])=1 then sin(2*Pi()*lookup([running %],1)+lookup(max([%])/(1+35*[Gap]),1))&#10;//            else sin(2*Pi()*[running %]) END&#10;//When 3 then if max([Duplicate])=1 then sin(2*Pi()*lookup([running %],1))&#10;//            else sin(2*Pi()*lookup([running %],-1)+lookup(max([%])/(1+35*[Gap]),-1)) END&#10;//When 4 then if max([Duplicate])=1 then sin(2*Pi()*[running %]+max([%])/(1+35*[Gap]))&#10;//            else sin(2*Pi()*lookup([running %],-1)) End&#10;//End'>
          <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='zero path dim' datatype='integer' name='[zero path (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='iif([1-&gt;2%]=0 and [1-&gt;2% (ChordData2.txt)]=0,1,0)' />
      </column>
      <column caption='Endpoint Size' datatype='real' hidden='true' name='[zero path dim (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='iif([Base]=2,[1-&gt;2%],[1-&gt;2% (ChordData2.txt)])' />
      </column>
      <column-instance column='[UberOrderB (copy)]' derivation='Max' name='[max:UberOrderB (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4260626104935528]' derivation='None' name='[none:Calculation_4260626104935528:nk]' pivot='key' type='nominal' />
      <column-instance column='[Color1]' derivation='None' name='[none:Color1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Name1]' derivation='None' name='[none:Name1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_0990706121059053]' derivation='User' name='[usr:Calculation_0990706121059053:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Base]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_5840706103928033]' derivation='User' name='[usr:Calculation_5840706103928033:nk:1]' pivot='key' type='nominal'>
        <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Base]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_8920726140230339]' derivation='User' name='[usr:Calculation_8920726140230339:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='Rows' />
        <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[CircleColor (copy)]' derivation='User' name='[usr:CircleColor (copy):nk:3]' pivot='key' type='nominal'>
        <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Base]' ordering-type='Field' />
        <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0990706121059053]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Base]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Color (copy 2)]' derivation='User' name='[usr:Color (copy 2):nk:4]' pivot='key' type='nominal'>
        <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
        <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
      </column-instance>
      <mapped-images>
        <mapped-image caption='Square1' expression='http://datablick.com/wp-content/uploads/2015/09/Square.png' name='[MappedImage2]'>
          <mapping bottom='-0.001' left='-0.001' right='0.001' top='0.001' x='[Calculation_6640703222416979]' y='[X_Path (copy)]' />
        </mapped-image>
      </mapped-images>
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='/Users/nsalvate/Desktop/ChordFiles/UberExtract.tde' schema='Extract' tablename='Extract' update-time='09/29/2015 07:58:30 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[% (copy 2)]' value='[Extract].[% (copy 2)]' />
            <map key='[% (copy)]' value='[Extract].[% (copy)]' />
            <map key='[1-&gt;2% (ChordData2.txt)]' value='[Extract].[1-&gt;2%]' />
            <map key='[1-&gt;2%]' value='[Extract].[1-&gt;2%1]' />
            <map key='[Base]' value='[Extract].[Base]' />
            <map key='[Calculation_1770703152630338 (copy)]' value='[Extract].[Calculation_1770703152630338 (copy)]' />
            <map key='[Calculation_4280726230151689]' value='[Extract].[Calculation_4280726230151689]' />
            <map key='[Calculation_7600712223119598]' value='[Extract].[Calculation_7600712223119598]' />
            <map key='[Calculation_7740703151324948]' value='[Extract].[Calculation_7740703151324948]' />
            <map key='[Calculation_8870703143045119]' value='[Extract].[Calculation_8870703143045119]' />
            <map key='[Color1 (ChordData2.txt)]' value='[Extract].[Color1]' />
            <map key='[Color1]' value='[Extract].[Color11]' />
            <map key='[Color2 (ChordData2.txt)]' value='[Extract].[Color2]' />
            <map key='[Color2]' value='[Extract].[Color21]' />
            <map key='[Copy]' value='[Extract].[Copy]' />
            <map key='[Endpoint Size (copy)]' value='[Extract].[Endpoint Size (copy)]' />
            <map key='[Latitude (ChordData2.txt)]' value='[Extract].[Latitude]' />
            <map key='[Latitude2 (ChordData2.txt)]' value='[Extract].[Latitude2]' />
            <map key='[Latitude2]' value='[Extract].[Latitude21]' />
            <map key='[Latitude]' value='[Extract].[Latitude1]' />
            <map key='[Longitude (ChordData2.txt)]' value='[Extract].[Longitude]' />
            <map key='[Longitude2 (ChordData2.txt)]' value='[Extract].[Longitude2]' />
            <map key='[Longitude2]' value='[Extract].[Longitude21]' />
            <map key='[Longitude]' value='[Extract].[Longitude1]' />
            <map key='[Name1 (ChordData2.txt)]' value='[Extract].[Name1]' />
            <map key='[Name1]' value='[Extract].[Name11]' />
            <map key='[Name2 (ChordData2.txt)]' value='[Extract].[Name2]' />
            <map key='[Name2]' value='[Extract].[Name21]' />
            <map key='[Nbhd Order (A) (copy 2)]' value='[Extract].[Nbhd Order (A) (copy 2)]' />
            <map key='[Order1 (ChordData2.txt)]' value='[Extract].[Order1]' />
            <map key='[Order1]' value='[Extract].[Order11]' />
            <map key='[Population (ChordData2.txt)]' value='[Extract].[Population]' />
            <map key='[Population2 (ChordData2.txt)]' value='[Extract].[Population2]' />
            <map key='[Population2]' value='[Extract].[Population21]' />
            <map key='[Population]' value='[Extract].[Population1]' />
            <map key='[UberOrderB (copy)]' value='[Extract].[UberOrderB (copy)]' />
            <map key='[zero path (copy)]' value='[Extract].[zero path (copy)]' />
          </cols>
          <calculations>
            <calculation column='[% (copy 2)]' formula='(iif([Name1]=[Name2],.5,1)* &#10;if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
            <calculation column='[% (copy)]' formula='//iif([Name1]=[Name2],.5,1)* &#10;(if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
            <calculation column='[Calculation_1770703152630338 (copy)]' formula='[Name1]+&quot;&lt;-&gt;&quot;+[Name2]' />
            <calculation column='[Calculation_4280726230151689]' formula='zn(iif([Base]=1,1,0))' />
            <calculation column='[Calculation_7600712223119598]' formula='Case [Copy]&#10;When 1 then [Name1]&#10;When 2 then [Name1]&#10;When 3 then [Name2]&#10;When 4 then [Name2]&#10;When 5 then if [Name1]&lt;&gt;[Name2] then [Name2] end&#10;End' />
            <calculation column='[Calculation_7740703151324948]' formula='(iif([Name1]=[Name2],.5,1)* &#10;if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
            <calculation column='[Calculation_8870703143045119]' formula='//if [1 -&gt; 2 %]=0 and [2 -&gt; 1 %]=0 then &apos;Filter&apos;&#10;//else&#10;if [1-&gt;2%]&gt;[1-&gt;2% (ChordData2.txt)] then [Name1]&#10;else//if [1-&gt;2%]&lt;=[A   B % (ChordData2.txt)] then &#10;[Name2]&#10;end' />
            <calculation column='[Endpoint Size (copy)]' formula='iif([Base]=2,[Name2],[Name1])' />
            <calculation column='[Nbhd Order (A) (copy 2)]' formula='if [Base]=1 then [Order1]&#10;else [Order1 (ChordData2.txt)] end' />
            <calculation column='[UberOrderB (copy)]' formula='//iif([Name1]=[Name2],[Nbhd Order]+(1-2*[%]),[Nbhd Order]+(1-[%]))&#10;&#10;[Nbhd Order (A) (copy 2)]+(1-2*[% (copy 2)])' />
            <calculation column='[zero path (copy)]' formula='iif([1-&gt;2%]=0 and [1-&gt;2% (ChordData2.txt)]=0,1,0)' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='12250' timestamp-start='2015-09-29 19:58:30.831' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>% (copy 2)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% (copy 2)</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>310</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.036800858999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% (copy)</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>305</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.042827604999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1-&gt;2%</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1-&gt;2% (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1-&gt;2%</remote-alias>
              <ordinal>2</ordinal>
              <family>ChordData2#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>305</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.042827604999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1-&gt;2%1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[1-&gt;2%]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1-&gt;2%1</remote-alias>
              <ordinal>3</ordinal>
              <family>ChordData1#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>305</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.042827604999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Base</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Base]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Base</remote-alias>
              <ordinal>4</ordinal>
              <family>2_Copies#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
                <statistic aggregation='Median' datatype='integer'>2</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_7740703151324948</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_7740703151324948]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_7740703151324948</remote-alias>
              <ordinal>5</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>310</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.036800858999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Color1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Color1 (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Color1</remote-alias>
              <ordinal>6</ordinal>
              <family>ChordData2#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#377EB8&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;\#FFFF33&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Color11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Color1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Color11</remote-alias>
              <ordinal>7</ordinal>
              <family>ChordData1#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#377EB8&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;\#FFFF33&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Color2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Color2 (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Color2</remote-alias>
              <ordinal>8</ordinal>
              <family>ChordData2#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#377EB8&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;\#FFFF33&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Color21</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Color2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Color21</remote-alias>
              <ordinal>9</ordinal>
              <family>ChordData1#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#377EB8&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;\#FFFF33&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Copy</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Copy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Copy</remote-alias>
              <ordinal>10</ordinal>
              <family>5_Copies#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>5</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>11</ordinal>
              <family>ChordData2#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>37.710700000000003</statistic>
                <statistic aggregation='Max' datatype='real'>37.804499999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude2 (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude2</remote-alias>
              <ordinal>12</ordinal>
              <family>ChordData2#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>37.710700000000003</statistic>
                <statistic aggregation='Max' datatype='real'>37.804499999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude21</remote-alias>
              <ordinal>13</ordinal>
              <family>ChordData1#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>37.710700000000003</statistic>
                <statistic aggregation='Max' datatype='real'>37.804499999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude1</remote-alias>
              <ordinal>14</ordinal>
              <family>ChordData1#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>37.710700000000003</statistic>
                <statistic aggregation='Max' datatype='real'>37.804499999999997</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>15</ordinal>
              <family>ChordData2#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.5009</statistic>
                <statistic aggregation='Max' datatype='real'>-122.38549999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude2 (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude2</remote-alias>
              <ordinal>16</ordinal>
              <family>ChordData2#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.5009</statistic>
                <statistic aggregation='Max' datatype='real'>-122.38549999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude21</remote-alias>
              <ordinal>17</ordinal>
              <family>ChordData1#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.5009</statistic>
                <statistic aggregation='Max' datatype='real'>-122.38549999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude1</remote-alias>
              <ordinal>18</ordinal>
              <family>ChordData1#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.5009</statistic>
                <statistic aggregation='Max' datatype='real'>-122.38549999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name1 (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name1</remote-alias>
              <ordinal>19</ordinal>
              <family>ChordData2#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name11</remote-alias>
              <ordinal>20</ordinal>
              <family>ChordData1#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name2 (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name2</remote-alias>
              <ordinal>21</ordinal>
              <family>ChordData2#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Name21</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name21</remote-alias>
              <ordinal>22</ordinal>
              <family>ChordData1#txt</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Order1 (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order1</remote-alias>
              <ordinal>23</ordinal>
              <family>ChordData2#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>220500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>18.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>35</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.099917188293404</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.099504938362077</statistic>
                <statistic aggregation='Var' datatype='real'>102.00832721038452</statistic>
                <statistic aggregation='VarP' datatype='real'>102.0</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5218500.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order11</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Order1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order11</remote-alias>
              <ordinal>24</ordinal>
              <family>ChordData1#txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>35</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>25</ordinal>
              <family>ChordData2#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.058438999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>0.55315999999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population2 (ChordData2.txt)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population2</remote-alias>
              <ordinal>26</ordinal>
              <family>ChordData2#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.058438999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>0.55315999999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population21</remote-alias>
              <ordinal>27</ordinal>
              <family>ChordData1#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.058438999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>0.55315999999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population1</remote-alias>
              <ordinal>28</ordinal>
              <family>ChordData1#txt</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.058438999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>0.55315999999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1770703152630338 (copy)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_1770703152630338 (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1770703152630338 (copy)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1225</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&lt;-&gt;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&lt;-&gt;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_4280726230151689</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_4280726230151689]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_4280726230151689</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>6125.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.50002040941282977</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.5</statistic>
                <statistic aggregation='Var' datatype='real'>0.25002040982937385</statistic>
                <statistic aggregation='VarP' datatype='real'>0.25</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6125.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;desc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_7600712223119598</remote-name>
              <remote-type>130</remote-type>
              <local-name>[Calculation_7600712223119598]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_7600712223119598</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <scale>2</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12180</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_8870703143045119</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_8870703143045119]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_8870703143045119</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Endpoint Size (copy)</remote-name>
              <remote-type>130</remote-type>
              <local-name>[Endpoint Size (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Endpoint Size (copy)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>2</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;wstr&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Nbhd Order (A) (copy 2)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Nbhd Order (A) (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Nbhd Order (A) (copy 2)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>220500.0</statistic>
                <statistic aggregation='Avg' datatype='real'>18.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>35</statistic>
                <statistic aggregation='Stdev' datatype='real'>10.099917188293404</statistic>
                <statistic aggregation='StdevP' datatype='real'>10.099504938362077</statistic>
                <statistic aggregation='Var' datatype='real'>102.00832721038452</statistic>
                <statistic aggregation='VarP' datatype='real'>102.0</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5218500.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UberOrderB (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[UberOrderB (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UberOrderB (copy)</remote-alias>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>490</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.9995876880000001</statistic>
                <statistic aggregation='Max' datatype='real'>36.0</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zero path (copy)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[zero path (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zero path (copy)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7440.0</statistic>
                <statistic aggregation='Avg' datatype='real'>0.60734693877551016</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.48836062884432574</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.4883406953506198</statistic>
                <statistic aggregation='Var' datatype='real'>0.23849610380522526</statistic>
                <statistic aggregation='VarP' datatype='real'>0.23847663473552685</statistic>
                <statistic aggregation='Count' datatype='integer'>12250</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7440.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.236631' measure-ordering='alphabetic' measure-percentage='0.236631' show-hidden-fields='true' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_4260626104935528:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Noe&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bayview&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ocean View&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Crocker Amazon&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Pacific Heights&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Lakeshore&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Western Addition&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Golden Gate Park&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;South Of Market&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Financial District&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Russian Hill&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Diamond Heights&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Parkside&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;North Beach&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bernal Heights&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Outer Mission&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Mission&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Haight&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Twin Peaks&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Glen Park&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Seacliff&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Marina&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Downtown&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Potrero&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Nob Hill&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Inner Richmond&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Visitacion Valley&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Inner Sunset&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;West Of Twin Peaks&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Outer Richmond&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Excelsior&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Presidio Heights&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Outer Sunset&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name1:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Crocker Amazon&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Parkside&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Western Addition&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Diamond Heights&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Presidio Heights&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Golden Gate Park&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Noe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Marina&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Downtown&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Lakeshore&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Bayview&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bernal Heights&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Potrero&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Filter&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Glen Park&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Inner Richmond&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Russian Hill&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Financial District&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Haight&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Outer Mission&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Mission&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ocean View&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;West Of Twin Peaks&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Nob Hill&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Outer Sunset&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;South Of Market&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Excelsior&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Inner Sunset&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Outer Richmond&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Visitacion Valley&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;North Beach&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Pacific Heights&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Seacliff&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Twin Peaks&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_0990706121059053:nk:1]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%missing%</bucket>
            </map>
            <map to='#3c589e'>
              <bucket>&quot;\#377EB8&quot;</bucket>
            </map>
            <map to='#49a13a'>
              <bucket>&quot;\#4DAF4A&quot;</bucket>
            </map>
            <map to='#762b87'>
              <bucket>&quot;\#984EA3&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;\#A65628&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;\#FFFF33&quot;</bucket>
            </map>
            <map to='#d01928'>
              <bucket>&quot;\#E41A1C&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;\#999999&quot;</bucket>
            </map>
            <map to='#ed3fa2'>
              <bucket>&quot;\#F781BF&quot;</bucket>
            </map>
            <map to='#fe561e'>
              <bucket>&quot;\#FF7F00&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;zero&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_5840706103928033:nk:1]' type='palette'>
            <map to='#2d418f'>
              <bucket>&quot;\#377EB8&quot;</bucket>
            </map>
            <map to='#399526'>
              <bucket>&quot;\#4DAF4A&quot;</bucket>
            </map>
            <map to='#621276'>
              <bucket>&quot;\#984EA3&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;\#A65628&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;\#FFFF33&quot;</bucket>
            </map>
            <map to='#c50019'>
              <bucket>&quot;\#E41A1C&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;\#999999&quot;</bucket>
            </map>
            <map to='#e81792'>
              <bucket>&quot;\#F781BF&quot;</bucket>
            </map>
            <map to='#fe3d04'>
              <bucket>&quot;\#FF7F00&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:CircleColor (copy):nk:3]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Apple&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Huawei&quot;</bucket>
            </map>
            <map to='#4e6fac'>
              <bucket>&quot;\#377EB8&quot;</bucket>
            </map>
            <map to='#5bac50'>
              <bucket>&quot;\#4DAF4A&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sony&quot;</bucket>
            </map>
            <map to='#894597'>
              <bucket>&quot;\#984EA3&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Nokia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;LG&quot;</bucket>
            </map>
            <map to='#d9323a'>
              <bucket>&quot;\#E41A1C&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Samsung&quot;</bucket>
            </map>
            <map to='#f160b1'>
              <bucket>&quot;\#F781BF&quot;</bucket>
            </map>
            <map to='#fe6e34'>
              <bucket>&quot;\#FF7F00&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;HTC&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;zero&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Color1:nk]' type='palette'>
            <map to='#0c0f78'>
              <bucket>&quot;Samsung&quot;</bucket>
            </map>
            <map to='#0e7bbc'>
              <bucket>&quot;Nokia&quot;</bucket>
            </map>
            <map to='#103c1a'>
              <bucket>&quot;Sony&quot;</bucket>
            </map>
            <map to='#4e6fac'>
              <bucket>&quot;\#377EB8&quot;</bucket>
            </map>
            <map to='#59a90e'>
              <bucket>&quot;HTC&quot;</bucket>
            </map>
            <map to='#5bac50'>
              <bucket>&quot;\#4DAF4A&quot;</bucket>
            </map>
            <map to='#606060'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#7c7c7c'>
              <bucket>&quot;\#999999&quot;</bucket>
            </map>
            <map to='#894597'>
              <bucket>&quot;\#984EA3&quot;</bucket>
            </map>
            <map to='#949494'>
              <bucket>&quot;\#FFFF33&quot;</bucket>
            </map>
            <map to='#965a44'>
              <bucket>&quot;\#A65628&quot;</bucket>
            </map>
            <map to='#b7b7b7'>
              <bucket>&quot;Apple&quot;</bucket>
            </map>
            <map to='#ba004a'>
              <bucket>&quot;LG&quot;</bucket>
            </map>
            <map to='#d9323a'>
              <bucket>&quot;\#E41A1C&quot;</bucket>
            </map>
            <map to='#e4001d'>
              <bucket>&quot;Huawei&quot;</bucket>
            </map>
            <map to='#f160b1'>
              <bucket>&quot;\#F781BF&quot;</bucket>
            </map>
            <map to='#fe6e34'>
              <bucket>&quot;\#FF7F00&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Color (copy 2):nk:4]' type='palette'>
            <map to='#0d1078'>
              <bucket>&quot;Samsung&quot;</bucket>
            </map>
            <map to='#0f7bbc'>
              <bucket>&quot;Nokia&quot;</bucket>
            </map>
            <map to='#123b1b'>
              <bucket>&quot;Sony&quot;</bucket>
            </map>
            <map to='#2b69a9'>
              <bucket>&quot;\#377EB8&quot;</bucket>
            </map>
            <map to='#40a339'>
              <bucket>&quot;\#4DAF4A&quot;</bucket>
            </map>
            <map to='#59a90e'>
              <bucket>&quot;HTC&quot;</bucket>
            </map>
            <map to='#606060'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#843692'>
              <bucket>&quot;\#984EA3&quot;</bucket>
            </map>
            <map to='#878787'>
              <bucket>&quot;\#999999&quot;</bucket>
            </map>
            <map to='#94431e'>
              <bucket>&quot;\#A65628&quot;</bucket>
            </map>
            <map to='#b7b7b7'>
              <bucket>&quot;Apple&quot;</bucket>
            </map>
            <map to='#ba004a'>
              <bucket>&quot;LG&quot;</bucket>
            </map>
            <map to='#db0016'>
              <bucket>&quot;\#E41A1C&quot;</bucket>
            </map>
            <map to='#e70014'>
              <bucket>&quot;Huawei&quot;</bucket>
            </map>
            <map to='#f367b2'>
              <bucket>&quot;\#F781BF&quot;</bucket>
            </map>
            <map to='#fd6908'>
              <bucket>&quot;\#FF7F00&quot;</bucket>
            </map>
            <map to='#ffff28'>
              <bucket>&quot;\#FFFF33&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Color (copy 2):nk:4]&#10;[usr:Calculation_8920726140230339:nk]' type='palette'>
            <map to='#0d1078'>
              <multibucket>
                <bucket>&quot;Samsung&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#0f7bbc'>
              <multibucket>
                <bucket>&quot;Nokia&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#123b1b'>
              <multibucket>
                <bucket>&quot;Sony&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#1f77b4'>
              <multibucket>
                <bucket>&quot;other&quot;</bucket>
                <bucket>%null%</bucket>
              </multibucket>
            </map>
            <map to='#2b69a9'>
              <multibucket>
                <bucket>&quot;\#377EB8&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#398fe9'>
              <multibucket>
                <bucket>&quot;\#377EB8&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#40a339'>
              <multibucket>
                <bucket>&quot;\#4DAF4A&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#50e744'>
              <multibucket>
                <bucket>&quot;\#4DAF4A&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a90e'>
              <multibucket>
                <bucket>&quot;HTC&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#606060'>
              <multibucket>
                <bucket>&quot;Other&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#60b2d8'>
              <multibucket>
                <bucket>&quot;Nokia&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#656db0'>
              <multibucket>
                <bucket>&quot;Samsung&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#698970'>
              <multibucket>
                <bucket>&quot;Sony&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#843692'>
              <multibucket>
                <bucket>&quot;\#984EA3&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#878787'>
              <multibucket>
                <bucket>&quot;\#999999&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8fc953'>
              <multibucket>
                <bucket>&quot;HTC&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#94431e'>
              <multibucket>
                <bucket>&quot;\#A65628&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a1a1a1'>
              <multibucket>
                <bucket>&quot;Other&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b7b7b7'>
              <multibucket>
                <bucket>&quot;Apple&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ba004a'>
              <multibucket>
                <bucket>&quot;LG&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#cc52e3'>
              <multibucket>
                <bucket>&quot;\#984EA3&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d66193'>
              <multibucket>
                <bucket>&quot;LG&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d6d6d6'>
              <multibucket>
                <bucket>&quot;Apple&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#db0016'>
              <multibucket>
                <bucket>&quot;\#E41A1C&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e70014'>
              <multibucket>
                <bucket>&quot;Huawei&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e8e8e8'>
              <multibucket>
                <bucket>&quot;\#999999&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e96a31'>
              <multibucket>
                <bucket>&quot;\#A65628&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#eb0019'>
              <multibucket>
                <bucket>&quot;\#E41A1C&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f16970'>
              <multibucket>
                <bucket>&quot;Huawei&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f367b2'>
              <multibucket>
                <bucket>&quot;\#F781BF&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fc6aba'>
              <multibucket>
                <bucket>&quot;\#F781BF&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fd6908'>
              <multibucket>
                <bucket>&quot;\#FF7F00&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#feff29'>
              <multibucket>
                <bucket>&quot;\#FFFF33&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff6b0a'>
              <multibucket>
                <bucket>&quot;\#FF7F00&quot;</bucket>
                <bucket>&quot;Interior&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffff28'>
              <multibucket>
                <bucket>&quot;\#FFFF33&quot;</bucket>
                <bucket>&quot;Border&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffffff'>
              <multibucket>
                <bucket>&quot;other&quot;</bucket>
                <bucket>&quot;Label&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Resolution' datatype='real' name='[Arc Points (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.01'>
          <calculation class='tableau' formula='0.01' />
        </column>
        <column caption='Gap' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0035000000000000001'>
          <calculation class='tableau' formula='0.0035000000000000001' />
        </column>
        <column caption='Weight' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
          <calculation class='tableau' formula='0.29999999999999999' />
        </column>
        <column caption='Max D' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='r2' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='1.01'>
          <calculation class='tableau' formula='1.01' />
        </column>
        <column caption='Parameter 5' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='display resolution' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='0.001'>
          <calculation class='tableau' formula='0.001' />
        </column>
        <column caption='X_offset1' datatype='real' name='[Weight (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.20000000000000001'>
          <calculation class='tableau' formula='0.20000000000000001' />
        </column>
        <column caption='X_offset2' datatype='real' name='[X_offset1 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.20000000000000001'>
          <calculation class='tableau' formula='0.20000000000000001' />
        </column>
        <column caption='r3' datatype='real' name='[r2 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.0600000000000001'>
          <calculation class='tableau' formula='1.0600000000000001' />
        </column>
        <column caption='rx_label' datatype='real' name='[r3 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.3'>
          <calculation class='tableau' formula='1.3' />
        </column>
        <column caption='ry_label' datatype='real' name='[r4 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.2'>
          <calculation class='tableau' formula='1.2' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Chord Diagram &amp; Bar Chart' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Name3' />
        <param name='target' value='Chord Diagram &amp; Bar Chart' />
      </command>
    </action>
    <action caption='Highlight1 2 1' name='[Action5]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='sheet' worksheet='Chord Diagram' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Name3' />
        <param name='target' value='Chord Diagram' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Chord_Data' name='textscan.42181.375245138900 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='textscan.42181.375245138900 (copy 2)'>
            <column datatype='real' name='[1-&gt;2% (ChordData2.txt)]' role='measure' type='quantitative' />
            <column datatype='real' name='[1-&gt;2%]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Base]' role='dimension' type='ordinal' />
            <column caption='Name3' datatype='string' name='[Calculation_7600712223119598]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Case [Copy]&#10;When 1 then [Name1]&#10;When 2 then [Name1]&#10;When 3 then [Name2]&#10;When 4 then [Name2]&#10;When 5 then if [Name1]&lt;&gt;[Name2] then [Name2] end&#10;End' />
            </column>
            <column caption='%' datatype='real' default-format='p0.00%' name='[Calculation_7740703151324948]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(iif([Name1]=[Name2],.5,1)* &#10;if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
            </column>
            <column datatype='string' name='[Color1]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Copy]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Name1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name2]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Order1]' role='dimension' type='ordinal' />
            <column-instance column='[Order1]' derivation='Attribute' name='[attr:Order1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_7600712223119598]' derivation='None' name='[none:Calculation_7600712223119598:nk]' pivot='key' type='nominal' />
            <column-instance column='[Color1]' derivation='None' name='[none:Color1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Copy]' derivation='None' name='[none:Copy:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_7740703151324948]' derivation='Sum' name='[sum:Calculation_7740703151324948:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Apple&quot;</bucket>
              <bucket>&quot;HTC&quot;</bucket>
              <bucket>&quot;Huawei&quot;</bucket>
              <bucket>&quot;LG&quot;</bucket>
              <bucket>&quot;Nokia&quot;</bucket>
              <bucket>&quot;Samsung&quot;</bucket>
              <bucket>&quot;Sony&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.42181.375245138900 (copy 2)].[none:Copy:ok]'>
            <groupfilter function='member' level='[none:Copy:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42181.375245138900 (copy 2)].[none:Copy:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[textscan.42181.375245138900 (copy 2)].[sum:Calculation_7740703151324948:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]' value='false' />
            <format attr='display' field='[textscan.42181.375245138900 (copy 2)].[attr:Order1:ok]' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='line-pattern' scope='rows' value='none' />
            <format attr='line-pattern' scope='cols' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='5'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42181.375245138900 (copy 2)].[none:Color1:nk]' />
              <text column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;%:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[sum:Calculation_7740703151324948:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42181.375245138900 (copy 2)].[attr:Order1:ok] / [textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk])</rows>
        <cols>[textscan.42181.375245138900 (copy 2)].[sum:Calculation_7740703151324948:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Chord Diagram'>
      <table>
        <view>
          <datasources>
            <datasource caption='Chord_Data' name='textscan.42181.375245138900 (copy 2)' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Resolution' datatype='real' name='[Arc Points (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.01'>
              <calculation class='tableau' formula='0.01' />
            </column>
            <column caption='Gap' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.0035000000000000001'>
              <calculation class='tableau' formula='0.0035000000000000001' />
            </column>
            <column caption='Weight' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.29999999999999999'>
              <calculation class='tableau' formula='0.29999999999999999' />
            </column>
            <column caption='Max D' datatype='real' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='r2' datatype='real' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='1.01'>
              <calculation class='tableau' formula='1.01' />
            </column>
            <column caption='Parameter 5' datatype='real' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
            <column caption='display resolution' datatype='real' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='0.001'>
              <calculation class='tableau' formula='0.001' />
            </column>
            <column caption='X_offset1' datatype='real' name='[Weight (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
            </column>
            <column caption='X_offset2' datatype='real' name='[X_offset1 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='0.20000000000000001'>
              <calculation class='tableau' formula='0.20000000000000001' />
            </column>
            <column caption='r3' datatype='real' name='[r2 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.0600000000000001'>
              <calculation class='tableau' formula='1.0600000000000001' />
            </column>
            <column caption='rx_label' datatype='real' name='[r3 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.3'>
              <calculation class='tableau' formula='1.3' />
            </column>
            <column caption='ry_label' datatype='real' name='[r4 (copy)]' param-domain-type='any' role='measure' type='quantitative' value='1.2'>
              <calculation class='tableau' formula='1.2' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42181.375245138900 (copy 2)'>
            <column caption='% (copy)' datatype='real' default-format='p0.00%' name='[% (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(iif([Name1]=[Name2],.5,1)* &#10;if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
            </column>
            <column caption='%_right' datatype='real' name='[%_left (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='lookup(max([Calculation_7740703151324948])/([running % (copy)]*(1+[Calculation_6990713134818659]*[Parameters].[Parameter 1])),last())'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='real' name='[1-&gt;2% (ChordData2.txt)]' role='measure' type='quantitative' />
            <column datatype='real' name='[1-&gt;2%]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Base]' role='dimension' type='ordinal' />
            <column caption='Max Running % @0' datatype='real' name='[Calculation9 (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='window_max([Calculation_5630719231757794])'>
                <table-calc ordering-type='Field'>
                  <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='t' datatype='real' default-format='n#,##0.0000' name='[Calculation_0670703221952408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='previous_value(-[Parameters].[Arc Points (copy)])+[Parameters].[Arc Points (copy)]'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Calculation10' datatype='real' name='[Calculation_0850726131011108]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_9200626121517530]=2 then window_min(min({fixed [Name1]:Sum([1-&gt;2%])}))/10 end'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='ID' datatype='string' name='[Calculation_1770703152630338 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Name1]+&quot;&lt;-&gt;&quot;+[Name2]' />
            </column>
            <column caption='running %' datatype='real' name='[Calculation_2060703155002665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='running_sum(max([Calculation_7740703151324948]))/([running % (copy)]*(1/(1-[Calculation_6990713134818659]*[Parameters].[Parameter 1])))+[Parameters].[Parameter 1]*max([Nbhd Order (A) (copy 2)])'>
                <table-calc ordering-type='Field'>
                  <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                  <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='%_left' datatype='real' name='[Calculation_2800703224035120]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='lookup(max([Calculation_7740703151324948])/([running % (copy)]*(1+[Calculation_6990713134818659]*[Parameters].[Parameter 1])),first())'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Pi' datatype='real' name='[Calculation_2850703225256847]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Lookup(Pi(),first())'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='ID_Filter' datatype='integer' name='[Calculation_3550823211409183]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='iif(max([Name1])=max([Calculation_8870703143045119]),1,0)' />
            </column>
            <column caption='Min Running % @0' datatype='real' name='[Calculation_3890719232932682]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='window_min([Calculation_5630719231757794])'>
                <table-calc ordering-type='Field'>
                  <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='Midpoint Theta' datatype='real' name='[Calculation_4170719233243480]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//(&#10;min(lookup([Calculation_3890719232932682],first()),lookup([Calculation_3890719232932682],last()))&#10;//+&#10;//min(lookup([Max Running % @0],first()),lookup([Max Running % @0],last()))&#10;//)'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Tooltip Chord' datatype='string' name='[Calculation_4180726124718308]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_9200626121517530]=1 or [Calculation_9200626121517530]=5 then&#10;window_min(min(&#10;if [Name1]=[Name2] then&#10;[Name1]+&quot; ↔ &quot;+[Name2]+&quot; &quot;+left(str(round([1-&gt;2%]*100,2)),find(str(round([1-&gt;2%]*100,2)),&quot;.&quot;)+2)+&quot;%&quot;&#10;else&#10;[Name2]+&quot; → &quot;+[Name1]+&quot; &quot;+left(str(round([1-&gt;2%]*100,2)),find(str(round([1-&gt;2%]*100,2)),&quot;.&quot;)+2)+&quot;%&#10;&quot;+[Name1]+&quot; → &quot;+[Name2]+&quot; &quot;+left(str(round([1-&gt;2% (ChordData2.txt)]*100,2)),find(str(round([1-&gt;2% (ChordData2.txt)]*100,2)),&quot;.&quot;)+2)+&quot;%&quot;&#10;end&#10;))&#10;end&#10;&#10;//window_min(min(Left([ID],find([ID],&quot;&lt;&quot;)-1)+&quot; -&gt; &quot;+Mid([ID],find([ID],&quot;&gt;&quot;)+1)+&quot; &quot;+left(str([1-&gt;2%]),find(str([1-&gt;2%]),&quot;.&quot;)+2)+&quot;%&#10;//&quot;+Mid([ID],find([ID],&quot;&gt;&quot;)+1)+&quot; -&gt; &quot;+Left([ID],find([ID],&quot;&lt;&quot;)-1)+&quot; &quot;+str(round([A   B % (ChordData2.txt)],2))))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='zero path' datatype='boolean' name='[Calculation_4210705094609589]' role='measure' type='nominal'>
              <calculation class='tableau' formula='window_max(max([1-&gt;2%]))=0 and window_max(max([1-&gt;2% (ChordData2.txt)]))=0'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Calculation8' datatype='real' name='[Calculation_4900723215921035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(Lookup([Calculation_3890719232932682],-2)+Lookup([Calculation9 (copy)],-2))/2'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Running % @0' datatype='real' name='[Calculation_5630719231757794]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_0670703221952408]=0 then [Calculation_2060703155002665] end'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='X_Path' datatype='real' name='[Calculation_6640703222416979]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//If [t]&lt;=.25 then if sin(2*[Pi]*[Running%_Left])&lt;&gt;sin(2*[Pi]*([Running%_Right]-[%_right])) then sin(2*[Pi]*[Running%_Left])*(1-4*[t])^2+sin(2*[Pi]*([Running%_Right]-[%_right]))*(4*[t])^2 else sin(2*[Pi]*([Running%_Right]-[%_right])) end&#10;//elseif [t]&lt;=.5 then sin(2*[Pi]*([Running%_Right]-[%_right]*2*(1-2*[t])))&#10;//elseif [t]&lt;=.75 then if sin(2*[Pi]*[Running%_Right])&lt;&gt;sin(2*[Pi]*([Running%_Left]-[%_left])) then sin(2*[Pi]*[Running%_Right])*(1-(4*[t]-2))^2+sin(2*[Pi]*([Running%_Left]-[%_left]))*(4*[t]-2)^2 else sin(2*[Pi]*([Running%_Left]-[%_left])) end&#10;//elseif [t]&lt;1  then sin(2*[Pi]*([Running%_Left]-[%_left]*(1-(4*[t]-3))))&#10;//end&#10;Int((if [Calculation_9200626121517530]=1 then&#10;If [Calculation_0670703221952408]&lt;=.25 then //if sin(2*[Pi]*[Running%_Left])&lt;&gt;sin(2*[Pi]*([Running%_Right]-[%_right])) then &#10;if [Name_A=Name_B (copy)]=1 then sin(2*[Calculation_2850703225256847]*[v2_X (copy)]) else&#10;sin(2*[Calculation_2850703225256847]*[v2_X (copy)])*(1-4*[Calculation_0670703221952408])^2+sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*(4*[Calculation_0670703221952408])^2&#10;+2*(4*[Calculation_0670703221952408])*(1-4*[Calculation_0670703221952408])*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[v2_X (copy)])-sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2+(cos(2*[Calculation_2850703225256847]*[v2_X (copy)])-cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2)))  *  (sin(2*[Calculation_2850703225256847]*[v2_X (copy)])+sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))/2 &#10;//else sin(2*[Pi]*([Running%_Right]-[%_right])) end&#10;end&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*2*(1-2*[Calculation_0670703221952408])))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then //if sin(2*[Pi]*[Running%_Right])&lt;&gt;sin(2*[Pi]*([Running%_Left]-[%_left])) then &#10;sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])*(1-(4*[Calculation_0670703221952408]-2))^2+sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*(4*[Calculation_0670703221952408]-2)^2&#10;+2*(4*[Calculation_0670703221952408]-2)*(1-(4*[Calculation_0670703221952408]-2))*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2+(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2)))  *  (sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])+sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))/2 &#10;//else sin(2*[Pi]*([Running%_Left]-[%_left])) end&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-3))))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=2 then&#10;If [Calculation_0670703221952408]&lt;=.25 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=3 then&#10;If [Calculation_0670703221952408]&lt;=.25 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=5 then&#10;If [Calculation_0670703221952408]&lt;=.25 then //if sin(2*[Pi]*[Running%_Left])&lt;&gt;sin(2*[Pi]*([Running%_Right]-[%_right])) then &#10;if [Name_A=Name_B (copy)]=1 then sin(2*[Calculation_2850703225256847]*[v2_X (copy)]) else&#10;sin(2*[Calculation_2850703225256847]*[v2_X (copy)])*(1-4*[Calculation_0670703221952408])^2+sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*(4*[Calculation_0670703221952408])^2&#10;+2*(4*[Calculation_0670703221952408])*(1-4*[Calculation_0670703221952408])*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[v2_X (copy)])-sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2+(cos(2*[Calculation_2850703225256847]*[v2_X (copy)])-cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2)))  *  (sin(2*[Calculation_2850703225256847]*[v2_X (copy)])+sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))/2 &#10;//else sin(2*[Pi]*([Running%_Right]-[%_right])) end&#10;end&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*2*(1-2*[Calculation_0670703221952408])))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then //if sin(2*[Pi]*[Running%_Right])&lt;&gt;sin(2*[Pi]*([Running%_Left]-[%_left])) then &#10;sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])*(1-(4*[Calculation_0670703221952408]-2))^2+sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*(4*[Calculation_0670703221952408]-2)^2&#10;+2*(4*[Calculation_0670703221952408]-2)*(1-(4*[Calculation_0670703221952408]-2))*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2+(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2)))  *  (sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])+sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))/2 &#10;//else sin(2*[Pi]*([Running%_Left]-[%_left])) end&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-3))))&#10;end&#10;&#10;&#10;&#10;&#10;&#10;end)/[Parameters].[Parameter 8])*[Parameters].[Parameter 8]&#10;&#10;//if [Copy Filled]=1 then&#10;//If [t]&lt;=.25 then  if [Name1=Name2]=1 then cos(2*[Pi]*[Running%_Left]) else&#10;//  cos(2*[Pi]*[Running%_Left])*(1-4*[t])^2+cos(2*[Pi]*([Running%_Right]-[%_right]))*(4*[t])^2&#10;//  +2*(4*[t])*(1-4*[t])*([Weight]*([Max D]-sqrt((sin(2*[Pi]*[Running%_Left])-sin(2*[Pi]*([Running%_Right]-[%_right])))^2+(cos(2*[Pi]*[Running%_Left])-cos(2*[Pi]*([Running%_Right]-[%_right])))^2))) * (cos(2*[Pi]*[Running%_Left])+cos(2*[Pi]*([Running%_Right]-[%_right])))/2&#10;//  end&#10;//elseif [t]&lt;=.5 then cos(2*[Pi]*([Running%_Right]-[%_right]*2*(1-2*[t])))&#10;//elseif [t]&lt;=.75 then&#10;//  cos(2*[Pi]*[Running%_Right])*(1-(4*[t]-2))^2+cos(2*[Pi]*([Running%_Left]-[%_left]))*(4*[t]-2)^2&#10;//  +2*((4*[t]-2))*(1-(4*[t]-2))*([Weight]*([Max D]-sqrt((sin(2*[Pi]*[Running%_Right])-sin(2*[Pi]*([Running%_Left]-[%_left])))^2+(cos(2*[Pi]*[Running%_Right])-cos(2*[Pi]*([Running%_Left]-[%_left])))^2)))*(cos(2*[Pi]*[Running%_Right])+cos(2*[Pi]*([Running%_Left]-[%_left])))/2 &#10;//elseif [t]&lt;=1 cos(2*[Pi]*([Running%_Left]-[%_left]*(1-(4*[t]-3))))&#10;//end&#10;//end'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Calculation3' datatype='real' name='[Calculation_6680714103909740]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_9200626121517530]=4 then if lookup(max([Name2]),-1)=lookup(max([Calculation_7600712223119598]),-1) then &#10;lookup([Running%_Left (copy)],-1) //else lookup([Running%_Right],-2) &#10;end&#10;end'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Calculation11' datatype='real' name='[Calculation_6730726132528022]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_9200626121517530]=2 or [Calculation_9200626121517530]=3 then window_min([Calculation_0850726131011108]) end'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Gap Count' datatype='integer' name='[Calculation_6990713134818659]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='window_max(max([Order1]))'>
                <table-calc ordering-type='Field'>
                  <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='Name3' datatype='string' name='[Calculation_7600712223119598]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='Case [Copy]&#10;When 1 then [Name1]&#10;When 2 then [Name1]&#10;When 3 then [Name2]&#10;When 4 then [Name2]&#10;When 5 then if [Name1]&lt;&gt;[Name2] then [Name2] end&#10;End' />
            </column>
            <column caption='%' datatype='real' default-format='p0.00%' name='[Calculation_7740703151324948]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(iif([Name1]=[Name2],.5,1)* &#10;if [Base]=1 then [1-&gt;2%]&#10;else [1-&gt;2% (ChordData2.txt)]&#10;end)' />
            </column>
            <column caption='Calculation13' datatype='real' default-format='p0.00%' name='[Calculation_7830726150917479]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_9200626121517530]=2 then window_max(max([Calculation_7740703151324948])) &#10;elseif [Calculation_9200626121517530]=3 then window_min(min([Calculation_7740703151324948])) end'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='_Bigger' datatype='string' name='[Calculation_8870703143045119]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='//if [1 -&gt; 2 %]=0 and [2 -&gt; 1 %]=0 then &apos;Filter&apos;&#10;//else&#10;if [1-&gt;2%]&gt;[1-&gt;2% (ChordData2.txt)] then [Name1]&#10;else//if [1-&gt;2%]&lt;=[A   B % (ChordData2.txt)] then &#10;[Name2]&#10;end' />
            </column>
            <column caption='Tooltip Boundary' datatype='string' name='[Calculation_8900726133312920]' role='measure' type='nominal'>
              <calculation class='tableau' formula='window_min(min([Calculation_7600712223119598]))+&quot;: &quot;+left(str(round([Calculation_6730726132528022]*100,2)),find(str(round([Calculation_6730726132528022]*100,2)),&quot;.&quot;)+2)+&quot;%&quot;'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='PolyType' datatype='string' name='[Calculation_8920726140230339]' role='measure' type='nominal'>
              <calculation class='tableau' formula='Case [Calculation_9200626121517530]&#10;When 1 Then &quot;Interior&quot;&#10;When 2 Then &quot;Border&quot;&#10;When 3 then &quot;Border&quot;&#10;When 4 then &quot;Label&quot;&#10;When 5 then &quot;Interior&quot;&#10;End'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Copy Filled' datatype='integer' name='[Calculation_9200626121517530]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='window_max(max([Copy]))'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Color' datatype='string' name='[Color (copy 2)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_9200626121517530]=1 then if window_max(max([Name2]))&lt;&gt;window_max(max([Calculation_8870703143045119])) then window_max(max([Color1])) else window_max(max([Color2])) end&#10;elseif [Calculation_9200626121517530]=2 then window_max(max([Color1]))&#10;elseif [Calculation_9200626121517530]=3 then window_max(max([Color2]))&#10;elseif [Calculation_9200626121517530]=5 then if window_max(max([Name2]))&lt;&gt;window_max(max([Calculation_8870703143045119])) then window_max(max([Color1])) else window_max(max([Color2])) end&#10;else &apos;other&apos;&#10;end'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column datatype='string' name='[Color1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Color2]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Copy]' role='dimension' type='ordinal' />
            <column caption='Base (bin)' datatype='integer' name='[Duplicate (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Base]' peg='0' size-parameter='[Parameters].[Arc Points (copy)]' />
            </column>
            <column datatype='string' name='[Name1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name2]' role='dimension' type='nominal' />
            <column caption='LabelCalc' datatype='string' name='[NameCalc (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='//if [Copy Filled]=4 and first()=0 and [X_Path (2)]&gt;=0 then left(&apos;__________________________________&apos;,len(window_max(max([Name3]))))+window_max(max([Name3]))+left(&apos;__________________________________&apos;,len(window_max(max([Name3]))))&#10;//elseif [Copy Filled]=4 and first()=0  then window_max(max([Name3]))&#10;//end&#10;&#10;if [Calculation_9200626121517530]=4 and first()=0 then window_max(max([Calculation_7600712223119598]))&#10;end'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Name1=Name2' datatype='integer' name='[Name_A=Name_B (copy)]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='window_max(max(iif([Name1]=[Name2],1,0)))'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Advanced Order' datatype='integer' name='[Nbhd Order (A) (copy 2)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Base]=1 then [Order1]&#10;else [Order1 (ChordData2.txt)] end' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Order1 (ChordData2.txt)]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Order1]' role='dimension' type='ordinal' />
            <column caption='Running%_Right' datatype='real' name='[Running%_Left (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='lookup([Calculation_2060703155002665],last())&#10;//Case max([Copy])&#10;//When 1 then if max([Duplicate])=1 then sin(2*Pi()*[running %])&#10;//            else sin(2*Pi()*[running %]+max([%])/(1+35*[Gap])) end&#10;//When 2 then if max([Duplicate])=1 then sin(2*Pi()*lookup([running %],1)+lookup(max([%])/(1+35*[Gap]),1))&#10;//            else sin(2*Pi()*[running %]) END&#10;//When 3 then if max([Duplicate])=1 then sin(2*Pi()*lookup([running %],1))&#10;//            else sin(2*Pi()*lookup([running %],-1)+lookup(max([%])/(1+35*[Gap]),-1)) END&#10;//When 4 then if max([Duplicate])=1 then sin(2*Pi()*[running %]+max([%])/(1+35*[Gap]))&#10;//            else sin(2*Pi()*lookup([running %],-1)) End&#10;//End'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Master Order' datatype='real' name='[UberOrderB (copy)]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='//iif([Name1]=[Name2],[Nbhd Order]+(1-2*[%]),[Nbhd Order]+(1-[%]))&#10;&#10;[Nbhd Order (A) (copy 2)]+(1-2*[% (copy 2)])' />
            </column>
            <column caption='X_Path (2)' datatype='real' name='[X_Path (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='//If [t]&lt;=.25 then if sin(2*[Pi]*[Running%_Left])&lt;&gt;sin(2*[Pi]*([Running%_Right]-[%_right])) then sin(2*[Pi]*[Running%_Left])*(1-4*[t])^2+sin(2*[Pi]*([Running%_Right]-[%_right]))*(4*[t])^2 else sin(2*[Pi]*([Running%_Right]-[%_right])) end&#10;//elseif [t]&lt;=.5 then sin(2*[Pi]*([Running%_Right]-[%_right]*2*(1-2*[t])))&#10;//elseif [t]&lt;=.75 then if sin(2*[Pi]*[Running%_Right])&lt;&gt;sin(2*[Pi]*([Running%_Left]-[%_left])) then sin(2*[Pi]*[Running%_Right])*(1-(4*[t]-2))^2+sin(2*[Pi]*([Running%_Left]-[%_left]))*(4*[t]-2)^2 else sin(2*[Pi]*([Running%_Left]-[%_left])) end&#10;//elseif [t]&lt;1  then sin(2*[Pi]*([Running%_Left]-[%_left]*(1-(4*[t]-3))))&#10;//end&#10;Int((if [Calculation_9200626121517530]=2 then&#10;&#10;If [Calculation_0670703221952408]&lt;=.25 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([v2_X (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=3 then&#10;&#10;If [Calculation_0670703221952408]&lt;=.25 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;elseif [Calculation_0670703221952408]&lt;=.5 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;elseif [Calculation_0670703221952408]&lt;=.75 then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;elseif [Calculation_0670703221952408]&lt;=1  then sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;end&#10;&#10;elseif [Calculation_9200626121517530]=4 then&#10;  if [Calculation_0670703221952408]=0 then &#10;  [Parameters].[r3 (copy)]*sin(2*[Calculation_2850703225256847]*([Calculation_4900723215921035]))&#10;+(&#10;[Parameters].[Weight (copy)]//len([LabelCalc])&#10;-2*iif(sin(2*[Calculation_2850703225256847]*([Calculation_4900723215921035]))&lt;=0,&#10;[Parameters].[X_offset1 (copy)]//len([LabelCalc])&#10;,0))/[Parameters].[Parameter 5]&#10;  //elseif //[t]=2*[Resolution] &#10;  //window_max(max([Base]))=2 and window_min(min([Name3]))=[Label Brand] then 0&#10;  end&#10;&#10;end)/[Parameters].[Parameter 8])*[Parameters].[Parameter 8]&#10;&#10;//0-&gt;.25 4*[t]&#10;//.25-&gt;.5 4*[t]-1&#10;//.5-&gt;.75 4*[t]-2&#10;//.75-&gt;1  4*[t]-3'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Y_Path' datatype='real' name='[X_Path (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Int((if [Calculation_9200626121517530]=1 then&#10;  if not [Calculation_4210705094609589] then&#10;    if [Calculation_0670703221952408]&lt;=.25 then &#10;      if [Name_A=Name_B (copy)]=1 then cos(2*[Calculation_2850703225256847]*[v2_X (copy)]) else&#10;        cos(2*[Calculation_2850703225256847]*[v2_X (copy)])*(1-4*[Calculation_0670703221952408])^2+cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*(4*[Calculation_0670703221952408])^2&#10;        +2*(4*[Calculation_0670703221952408])*(1-4*[Calculation_0670703221952408])*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[v2_X (copy)])-sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2+(cos(2*[Calculation_2850703225256847]*[v2_X (copy)])-cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2))) * (cos(2*[Calculation_2850703225256847]*[v2_X (copy)])+cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))/2&#10;      end&#10;    elseif [Calculation_0670703221952408]&lt;=.5 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*2*(1-2*[Calculation_0670703221952408])))&#10;    elseif [Calculation_0670703221952408]&lt;=.75 then&#10;      cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])*(1-(4*[Calculation_0670703221952408]-2))^2+cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*(4*[Calculation_0670703221952408]-2)^2&#10;      +2*((4*[Calculation_0670703221952408]-2))*(1-(4*[Calculation_0670703221952408]-2))*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2+(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2)))*(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])+cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))/2 &#10;    else cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-3))))&#10;    end&#10;  end&#10;elseif [Calculation_9200626121517530]=2 then&#10;  if [Calculation_0670703221952408]&lt;=.25 then cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;  elseif [Calculation_0670703221952408]&lt;=.5 then cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;  elseif [Calculation_0670703221952408]&lt;=.75 then cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;  elseif [Calculation_0670703221952408]&lt;=1  then cos(2*[Calculation_2850703225256847]*([v2_X (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;  end&#10;elseif [Calculation_9200626121517530]=3 then&#10;  if [Calculation_0670703221952408]&lt;=.25 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(4*[Calculation_0670703221952408])))*[Parameters].[Parameter 4]&#10;  elseif [Calculation_0670703221952408]&lt;=.5 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*([Parameters].[Parameter 4]+(4*[Calculation_0670703221952408]-1)*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;  elseif [Calculation_0670703221952408]&lt;=.75 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*(1-(4*[Calculation_0670703221952408]-2))))*[Parameters].[r2 (copy)]&#10;  elseif [Calculation_0670703221952408]&lt;=1  then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]))*([Parameters].[Parameter 4]+(1-(4*[Calculation_0670703221952408]-3))*([Parameters].[r2 (copy)]-[Parameters].[Parameter 4]))&#10;  end&#10;elseif [Calculation_9200626121517530]=4 //and [Name1=Name2]=1 &#10;then&#10;  if [Calculation_0670703221952408]=0 then &#10;  [Parameters].[r4 (copy)]*cos(2*[Calculation_2850703225256847]*([Calculation_4900723215921035]))&#10;  //elseif //[t]=2*[Resolution] &#10;  //window_max(max([Base]))=2 then 0&#10;  end&#10;elseif [Calculation_9200626121517530]=5 then&#10;  if not [Calculation_4210705094609589] then&#10;    if [Calculation_0670703221952408]&lt;=.25 then &#10;      if [Name_A=Name_B (copy)]=1 then cos(2*[Calculation_2850703225256847]*[v2_X (copy)]) else&#10;        cos(2*[Calculation_2850703225256847]*[v2_X (copy)])*(1-4*[Calculation_0670703221952408])^2+cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]))*(4*[Calculation_0670703221952408])^2&#10;        +2*(4*[Calculation_0670703221952408])*(1-4*[Calculation_0670703221952408])*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[v2_X (copy)])-sin(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2+(cos(2*[Calculation_2850703225256847]*[v2_X (copy)])-cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))^2))) * (cos(2*[Calculation_2850703225256847]*[v2_X (copy)])+cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)])))/2&#10;      end&#10;    elseif [Calculation_0670703221952408]&lt;=.5 then cos(2*[Calculation_2850703225256847]*([Running%_Left (copy)]-[%_left (copy)]*2*(1-2*[Calculation_0670703221952408])))&#10;    elseif [Calculation_0670703221952408]&lt;=.75 then&#10;      cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])*(1-(4*[Calculation_0670703221952408]-2))^2+cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]))*(4*[Calculation_0670703221952408]-2)^2&#10;      +2*((4*[Calculation_0670703221952408]-2))*(1-(4*[Calculation_0670703221952408]-2))*([Parameters].[Parameter 2]*([Parameters].[Parameter 3]-sqrt((sin(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-sin(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2+(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])-cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))^2)))*(cos(2*[Calculation_2850703225256847]*[Running%_Left (copy)])+cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120])))/2 &#10;    else cos(2*[Calculation_2850703225256847]*([v2_X (copy)]-[Calculation_2800703224035120]*(1-(4*[Calculation_0670703221952408]-3))))&#10;    end&#10;  end&#10;&#10;&#10;end&#10;&#10;&#10;&#10;)/[Parameters].[Parameter 8])*[Parameters].[Parameter 8]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Name2]' derivation='Attribute' name='[attr:Name2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7740703151324948]' derivation='Max' name='[max:Calculation_7740703151324948:qk]' pivot='key' type='quantitative' />
            <column-instance column='[UberOrderB (copy)]' derivation='Max' name='[max:UberOrderB (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[UberOrderB (copy)]' derivation='Min' name='[min:UberOrderB (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1770703152630338 (copy)]' derivation='None' name='[none:Calculation_1770703152630338 (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7600712223119598]' derivation='None' name='[none:Calculation_7600712223119598:nk]' pivot='key' type='nominal' />
            <column-instance column='[Copy]' derivation='None' name='[none:Copy:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name1]' derivation='None' name='[none:Name1:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[running % (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='window_sum(max([Calculation_7740703151324948]))//((1/(1-window_max([Gap Count])*[Gap]))+[Gap]*max([Advanced Order]))'>
                <table-calc ordering-type='Field'>
                  <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                  <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                  <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
                </table-calc>
              </calculation>
            </column>
            <column-instance column='[1-&gt;2% (ChordData2.txt)]' derivation='Sum' name='[sum:1-&gt;2% (ChordData2.txt):qk]' pivot='key' type='quantitative' />
            <column-instance column='[1-&gt;2%]' derivation='Sum' name='[sum:1-&gt;2%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order1]' derivation='Sum' name='[sum:Order1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation9 (copy)]' derivation='User' name='[usr:Calculation9 (copy):qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[running % (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6990713134818659]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2060703155002665]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0670703221952408]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_5630719231757794]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_0670703221952408]' derivation='User' name='[usr:Calculation_0670703221952408:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_0850726131011108]' derivation='User' name='[usr:Calculation_0850726131011108:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_3890719232932682]' derivation='User' name='[usr:Calculation_3890719232932682:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6990713134818659]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2060703155002665]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[running % (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0670703221952408]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_5630719231757794]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_4170719233243480]' derivation='User' name='[usr:Calculation_4170719233243480:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_5630719231757794]' ordering-type='Rows' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0670703221952408]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2060703155002665]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6990713134818659]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_3890719232932682]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[running % (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_4180726124718308]' derivation='User' name='[usr:Calculation_4180726124718308:nk:2]' pivot='key' type='nominal'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_5630719231757794]' derivation='User' name='[usr:Calculation_5630719231757794:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6990713134818659]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[running % (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2060703155002665]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0670703221952408]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_6640703222416979]' derivation='User' name='[usr:Calculation_6640703222416979:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0670703221952408]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2850703225256847]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2800703224035120]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[running % (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Name_A=Name_B (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2060703155002665]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6990713134818659]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[v2_X (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Running%_Left (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[%_left (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_6680714103909740]' derivation='User' name='[usr:Calculation_6680714103909740:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2060703155002665]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6990713134818659]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[running % (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Running%_Left (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_6730726132528022]' derivation='User' name='[usr:Calculation_6730726132528022:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0850726131011108]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_7830726150917479]' derivation='User' name='[usr:Calculation_7830726150917479:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_8900726133312920]' derivation='User' name='[usr:Calculation_8900726133312920:nk]' pivot='key' type='nominal'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6730726132528022]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0850726131011108]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_8920726140230339]' derivation='User' name='[usr:Calculation_8920726140230339:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_9200626121517530]' derivation='User' name='[usr:Calculation_9200626121517530:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Color (copy 2)]' derivation='User' name='[usr:Color (copy 2):nk:4]' pivot='key' type='nominal'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[NameCalc (copy)]' derivation='User' name='[usr:NameCalc (copy):nk:8]' pivot='key' type='nominal'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[X_Path (copy 2)]' derivation='User' name='[usr:X_Path (copy 2):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[%_left (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_5630719231757794]' ordering-type='Rows' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Running%_Left (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2800703224035120]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2850703225256847]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6990713134818659]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[v2_X (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation9 (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_4900723215921035]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0670703221952408]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2060703155002665]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_3890719232932682]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[min:UberOrderB (copy):qk]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[running % (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
            </column-instance>
            <column-instance column='[X_Path (copy)]' derivation='User' name='[usr:X_Path (copy):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_4900723215921035]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Copy]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Name_A=Name_B (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_4210705094609589]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[%_left (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_5630719231757794]' ordering-type='Rows' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[running % (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_3890719232932682]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2060703155002665]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
                <sort direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[max:UberOrderB (copy):qk]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_9200626121517530]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Running%_Left (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2800703224035120]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation9 (copy)]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[v2_X (copy)]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_2850703225256847]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_6990713134818659]' ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Copy]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
              <table-calc field='[textscan.42181.375245138900 (copy 2)].[Calculation_0670703221952408]' ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[running % (copy)]' derivation='User' name='[usr:running % (copy):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_1770703152630338 (copy)]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Calculation_7600712223119598]' />
                <order field='[textscan.42181.375245138900 (copy 2)].[Name1]' />
              </table-calc>
            </column-instance>
            <column caption='Running%_Left' datatype='real' name='[v2_X (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='lookup([Calculation_2060703155002665],first())&#10;//Case max([Copy])&#10;//When 1 then if max([Duplicate])=1 then sin(2*Pi()*[running %])&#10;//            else sin(2*Pi()*[running %]+max([%])/(1+35*[Gap])) end&#10;//When 2 then if max([Duplicate])=1 then sin(2*Pi()*lookup([running %],1)+lookup(max([%])/(1+35*[Gap]),1))&#10;//            else sin(2*Pi()*[running %]) END&#10;//When 3 then if max([Duplicate])=1 then sin(2*Pi()*lookup([running %],1))&#10;//            else sin(2*Pi()*lookup([running %],-1)+lookup(max([%])/(1+35*[Gap]),-1)) END&#10;//When 4 then if max([Duplicate])=1 then sin(2*Pi()*[running %]+max([%])/(1+35*[Gap]))&#10;//            else sin(2*Pi()*lookup([running %],-1)) End&#10;//End'>
                <table-calc ordering-field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' ordering-type='Field' />
              </calculation>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]'>
            <groupfilter expression='[Calculation_3550823211409183]=1' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_1770703152630338 (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]' direction='DESC' using='[textscan.42181.375245138900 (copy 2)].[max:Calculation_7740703151324948:qk]' />
          <sort class='computed' column='[textscan.42181.375245138900 (copy 2)].[none:Name1:nk]' direction='ASC' using='[textscan.42181.375245138900 (copy 2)].[sum:Order1:qk]' />
          <sort class='manual' column='[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk:4]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Apple&quot;</bucket>
              <bucket>&quot;HTC&quot;</bucket>
              <bucket>&quot;Huawei&quot;</bucket>
              <bucket>&quot;LG&quot;</bucket>
              <bucket>&quot;Nokia&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Samsung&quot;</bucket>
              <bucket>&quot;Sony&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;\#4DAF4A&quot;</bucket>
              <bucket>&quot;\#377EB8&quot;</bucket>
              <bucket>&quot;\#984EA3&quot;</bucket>
              <bucket>&quot;\#999999&quot;</bucket>
              <bucket>&quot;\#A65628&quot;</bucket>
              <bucket>&quot;\#E41A1C&quot;</bucket>
              <bucket>&quot;\#F781BF&quot;</bucket>
              <bucket>&quot;\#FF7F00&quot;</bucket>
              <bucket>&quot;\#FFFF33&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6640703222416979:qk:1]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6640703222416979:qk:1]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6640703222416979:qk:1]' scope='cols' value='true' />
            <format attr='display' class='0' field='[textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy 2):qk:1]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6640703222416979:qk:1]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='1' field='[textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy):qk:1]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy):qk:1]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy):qk:1]' scope='rows' value='false' />
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='render-fold-reversed' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='107' />
            <format attr='text-format' field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' value='n#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' value='n#,##0.000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_5630719231757794:qk:2]' field-type='quantitative' max='0.01' max-size='1' min='0.0' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='row-levels' value='16' />
            <format attr='row-horiz-levels' value='16' />
            <format attr='col-levels' value='16' />
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='0' />
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='mapped-image'>
            <format attr='enabled' id='[textscan.42181.375245138900 (copy)].[MappedImage4]' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_2' value='none' />
            <format attr='line-pattern' id='annotation_2' value='none' />
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='body-type' id='annotation_11' value='none' />
            <format attr='border-style' id='annotation_11' value='none' />
            <format attr='line-pattern' id='annotation_11' value='none' />
            <format attr='line-end' id='annotation_11' value='none' />
            <format attr='body-type' id='annotation_12' value='none' />
            <format attr='border-style' id='annotation_12' value='none' />
            <format attr='line-pattern' id='annotation_12' value='none' />
            <format attr='line-end' id='annotation_12' value='none' />
            <format attr='body-type' id='annotation_13' value='none' />
            <format attr='border-style' id='annotation_13' value='none' />
            <format attr='line-pattern' id='annotation_13' value='none' />
            <format attr='line-end' id='annotation_13' value='none' />
            <format attr='body-type' id='annotation_14' value='none' />
            <format attr='border-style' id='annotation_14' value='none' />
            <format attr='line-pattern' id='annotation_14' value='none' />
            <format attr='line-end' id='annotation_14' value='none' />
            <format attr='body-type' id='annotation_23' value='none' />
            <format attr='border-style' id='annotation_23' value='none' />
            <format attr='line-pattern' id='annotation_23' value='none' />
            <format attr='line-end' id='annotation_23' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='10'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk:4]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Name1:nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Copy:ok]' />
              <path column='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:running % (copy):qk:1]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6680714103909740:qk:8]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_0670703221952408:qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation9 (copy):qk:2]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[sum:1-&gt;2%:qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[sum:1-&gt;2% (ChordData2.txt):qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[sum:1-&gt;&gt;2% (ChordData2.txt):qk]&gt;&lt;[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]&gt;&lt;[textscan.42181.375245138900 (copy 2)].[sum:1-&gt;&gt;2%:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Name3:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Copy:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[none:Copy:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;name_1:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[none:Name1:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;name_2:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[attr:Name2:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Max Running % @0:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Calculation9 (copy):qk]&gt;</run>
                <run fontcolor='#787878'>&#10;t:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Calculation_0670703221952408:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Min Running % @0:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Calculation_3890719232932682:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Midpoint Theta:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Calculation_4170719233243480:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Running % @0:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Calculation_5630719231757794:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;X_Path:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6640703222416979:qk:3]&gt;</run>
                <run fontcolor='#787878'>&#10;Calculation3 along Copy:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6680714103909740:qk:8]&gt;</run>
                <run fontcolor='#787878'>&#10;Story Text:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6770726112601500:nk:2]&gt;</run>
                <run fontcolor='#787878'>&#10;Color:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk:4]&gt;</run>
                <run fontcolor='#787878'>&#10;LabelCalc:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:NameCalc (copy):nk:8]&gt;</run>
                <run fontcolor='#787878'>&#10;running % (copy):&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:running % (copy):qk]&gt;</run>
                <run fontcolor='#787878'>&#10;X_Path (2):&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy 2):qk:6]&gt;</run>
                <run fontcolor='#787878'>&#10;Y_Path:&#9;</run>
                <run bold='true'>&lt;[textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy):qk:2]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='1'>&lt;</run>
                <run fontalignment='1'>[textscan.42181.375245138900 (copy 2)].[usr:NameCalc (copy):nk:8]</run>
                <run fontalignment='1'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='font-size' value='11' />
                <format attr='font-family' value='Courier' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.64767956733703613' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-transparency' value='78' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1029' />
                <format attr='maxheight' value='1029' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='991' />
                <format attr='maxwidth' value='991' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='467' />
                <format attr='maxwidth' value='467' />
                <format attr='minheight' value='465' />
                <format attr='maxheight' value='465' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='460' />
                <format attr='maxwidth' value='460' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='460' />
                <format attr='maxwidth' value='460' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='538' />
                <format attr='maxwidth' value='538' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' y-axis-name='[textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy):qk:1]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk:4]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Name1:nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Copy:ok]' />
              <path column='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:running % (copy):qk:1]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6680714103909740:qk:8]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_0670703221952408:qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation9 (copy):qk:2]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[sum:1-&gt;2%:qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[sum:1-&gt;2% (ChordData2.txt):qk]' />
              <text column='[textscan.42181.375245138900 (copy 2)].[usr:NameCalc (copy):nk:8]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_4170719233243480:qk:2]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_5630719231757794:qk:2]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_3890719232932682:qk:2]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_7830726150917479:qk:2]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='1'>&lt;</run>
                <run fontalignment='1'>[textscan.42181.375245138900 (copy 2)].[usr:NameCalc (copy):nk:8]</run>
                <run fontalignment='1'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='font-family' value='Helvetica' />
                <format attr='font-size' value='14' />
                <format attr='font-weight' value='normal' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-transparency' value='78' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='538' />
                <format attr='maxwidth' value='538' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='467' />
                <format attr='maxwidth' value='467' />
                <format attr='minheight' value='465' />
                <format attr='maxheight' value='465' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='460' />
                <format attr='maxwidth' value='460' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='460' />
                <format attr='maxwidth' value='460' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='538' />
                <format attr='maxwidth' value='538' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' y-axis-name='[textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy):qk:1]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk:4]' />
              <color column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_8920726140230339:nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Name1:nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Copy:ok]' />
              <path column='[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:running % (copy):qk:1]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6680714103909740:qk:8]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_0670703221952408:qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation9 (copy):qk:2]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[sum:1-&gt;2%:qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[sum:1-&gt;2% (ChordData2.txt):qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[attr:Name2:nk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_4180726124718308:nk:2]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_0850726131011108:qk:1]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_9200626121517530:qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6730726132528022:qk]' />
              <lod column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_8900726133312920:nk]' />
              <tooltip column='[textscan.42181.375245138900 (copy 2)].[usr:Calculation_8900726133312920:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>&lt;</run>
                <run fontcolor='#898989'>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_4180726124718308:nk:2]</run>
                <run fontcolor='#898989'>&gt;</run>
                <run fontcolor='#898989'>&lt;</run>
                <run fontcolor='#898989'>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_8900726133312920:nk]</run>
                <run fontcolor='#898989'>&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontalignment='1'>&lt;</run>
                <run fontalignment='1'>[textscan.42181.375245138900 (copy 2)].[usr:NameCalc (copy):nk:8]</run>
                <run fontalignment='1'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='font-size' value='11' />
                <format attr='font-family' value='Courier' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-markers-mode' value='none' />
                <format attr='mark-transparency' value='78' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='538' />
                <format attr='maxwidth' value='538' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='1' />
                <format attr='minwidth' value='467' />
                <format attr='maxwidth' value='467' />
                <format attr='minheight' value='465' />
                <format attr='maxheight' value='465' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='460' />
                <format attr='maxwidth' value='460' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='460' />
                <format attr='maxwidth' value='460' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='538' />
                <format attr='maxwidth' value='538' />
                <format attr='minheight' value='467' />
                <format attr='maxheight' value='467' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy):qk:1] + [textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy):qk:1])</rows>
        <cols>([textscan.42181.375245138900 (copy 2)].[usr:X_Path (copy 2):qk:1] + [textscan.42181.375245138900 (copy 2)].[usr:Calculation_6640703222416979:qk:1])</cols>
        <show-full-range>
          <column>[textscan.42181.375245138900 (copy 2)].[Duplicate (bin)]</column>
        </show-full-range>
        <page-trail-options lines='true' mark-type='all' marks='false' size='100' start='69' />
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Chord Diagram &amp; Bar Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Uber Rides by Neighborhood</run>
            <run fontsize='10'>&#10;based on a post from Mike Bostock&apos;s blog</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='16' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='9368' id='15' type='title' w='100000' x='0' y='0' />
              <zone h='89951' id='14' type='layout-basic' w='100000' x='0' y='9368'>
                <zone h='89951' id='10' param='horz' type='layout-flow' w='23883' x='76117' y='9368'>
                  <zone fixed-size='160' h='89951' id='9' is-fixed='true' param='vert' type='layout-flow' w='23883' x='76117' y='9368'>
                    <zone h='89947' id='6' name='Bar Chart' w='23883' x='76117' y='9368'>
                      <layout-cache cell-count-h='35' type-h='cell' type-w='fixed' />
                    </zone>
                  </zone>
                </zone>
                <zone h='89951' id='12' param='vert' type='layout-flow' w='76117' x='0' y='9368'>
                  <zone h='89951' id='13' name='Chord Diagram' w='76117' x='0' y='9368'>
                    <layout-cache has-max-size-h='true' maxheight='1113' minheight='1113' type-h='scalable' type-w='fixed' />
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone forceUpdate='true' h='5208' id='19' is-scaled='1' param='/Users/nsalvate/Desktop/ChordFiles/Image/datablicklogo.png' type='bitmap' url='http://www.datablick.com' w='7993' x='999' y='93490' />
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='1' name='Chord Diagram &amp; Bar Chart'>
      <active id='13' />
      <zones>
        <zone h='7162' id='15' name='' type='title' w='100000' x='0' y='0' />
        <zone name='Bar Chart'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[textscan.42181.375245138900 (copy 2)].[none:Color1:nk]'>
            <bucket-selection />
          </highlight>
        </zone>
        <zone name='Chord Diagram'>
          <viewpoint>
            <zoom type='entire-view' />
            <floating-toolbar-visibility value='1' />
          </viewpoint>
        </zone>
        <zone forceUpdate='true' is-scaled='1' name='' type='bitmap' />
      </zones>
    </window>
    <window class='worksheet' hidden='true' name='Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint />
      <highlight>
        <color-one-way>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Copy:ok]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Order1 (ChordData2.txt):ok]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Order1:ok]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:color:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk:4]</field>
        </color-one-way>
      </highlight>
      <selection-collection />
      <visual />
    </window>
    <window class='worksheet' hidden='true' name='Chord Diagram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='type_in' param='[Parameters].[Arc Points (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='type_in' param='[Parameters].[r4 (copy)]' type='parameter' />
            <card mode='type_in' param='[Parameters].[r3 (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Bigger (copy):nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Border Only Filter (copy):nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338 (copy):nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_1770703152630338:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_3270714084951813:ok]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_3870703151150115:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_4180726124718308:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_5890703142603864:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Calculation_7600712223119598:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Copy (2_Copies.txt):ok]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Copy:ok]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Name1:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Nbhd Order (1) (copy):ok]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:Story Text (copy):nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:UberOrderB (copy):ok]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:UberOrderB (copy):qk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:name2:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:name:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[none:name_2:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_4180726124718308:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_4210705094609589:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_4220704233113727:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_4800703193148540:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_6770726112601500:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_8900726133312920:nk:2]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_8900726133312920:nk:5]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_8900726133312920:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Calculation_8920726140230339:nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk:2]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk:4]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Color (copy 2):nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Color (copy):nk:2]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:Color (copy):nk]</field>
          <field>[textscan.42181.375245138900 (copy 2)].[usr:NameCalc (copy):nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection />
      <visual />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Chord Diagram &amp; Bar Chart' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
